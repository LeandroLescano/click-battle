"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/index";
exports.ids = ["pages/index"];
exports.modules = {

/***/ "./components/Alerts.tsx":
/*!*******************************!*\
  !*** ./components/Alerts.tsx ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"requestPassword\": () => (/* binding */ requestPassword)\n/* harmony export */ });\n/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sweetalert2 */ \"sweetalert2\");\n/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _services_encode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../services/encode */ \"./services/encode.tsx\");\n\n\nconst requestPassword = async (password)=>{\n    return await sweetalert2__WEBPACK_IMPORTED_MODULE_0___default().fire({\n        title: \"Enter the password\",\n        input: \"password\",\n        showCancelButton: true,\n        cancelButtonText: \"Cancel\",\n        confirmButtonText: \"Enter\",\n        inputValidator: (val)=>{\n            if (!val) {\n                return \"Plese enter the password\";\n            }\n            return null;\n        },\n        showLoaderOnConfirm: true,\n        preConfirm: (pass)=>{\n            return (0,_services_encode__WEBPACK_IMPORTED_MODULE_1__.sha256)(pass).then((hash)=>{\n                if (hash !== password) {\n                    sweetalert2__WEBPACK_IMPORTED_MODULE_0___default().showValidationMessage(\"Incorrect password\");\n                    return false;\n                }\n                return true;\n            });\n        }\n    }).then((val)=>val\n    );\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0FsZXJ0cy50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFvRDtBQUNUO0FBRTNDLEtBQUssQ0FBQ0UsZUFBZSxVQUFVQyxRQUFnQixHQUFtQixDQUFDO0lBQ2pFLE1BQU0sQ0FBQyxLQUFLLENBQUNILHVEQUFTLENBQUMsQ0FBQztRQUN0QkssS0FBSyxFQUFFLENBQW9CO1FBQzNCQyxLQUFLLEVBQUUsQ0FBVTtRQUNqQkMsZ0JBQWdCLEVBQUUsSUFBSTtRQUN0QkMsZ0JBQWdCLEVBQUUsQ0FBUTtRQUMxQkMsaUJBQWlCLEVBQUUsQ0FBTztRQUMxQkMsY0FBYyxHQUFHQyxHQUFHLEdBQUssQ0FBQztZQUN4QixFQUFFLEdBQUdBLEdBQUcsRUFBRSxDQUFDO2dCQUNULE1BQU0sQ0FBQyxDQUEwQjtZQUNuQyxDQUFDO1lBQ0QsTUFBTSxDQUFDLElBQUk7UUFDYixDQUFDO1FBQ0RDLG1CQUFtQixFQUFFLElBQUk7UUFDekJDLFVBQVUsR0FBR0MsSUFBSSxHQUFLLENBQUM7WUFDckIsTUFBTSxDQUFDYix3REFBTSxDQUFDYSxJQUFJLEVBQUVDLElBQUksRUFBRUMsSUFBSSxHQUFLLENBQUM7Z0JBQ2xDLEVBQUUsRUFBRUEsSUFBSSxLQUFLYixRQUFRLEVBQUUsQ0FBQztvQkFDdEJILHdFQUEwQixDQUFDLENBQW9CO29CQUMvQyxNQUFNLENBQUMsS0FBSztnQkFDZCxDQUFDO2dCQUNELE1BQU0sQ0FBQyxJQUFJO1lBQ2IsQ0FBQztRQUNILENBQUM7SUFDSCxDQUFDLEVBQUVlLElBQUksRUFBRUosR0FBRyxHQUFLQSxHQUFHOztBQUN0QixDQUFDO0FBRTBCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xpY2stYmF0dGxlLW5leHQvLi9jb21wb25lbnRzL0FsZXJ0cy50c3g/M2YyYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU3dhbCwgeyBTd2VldEFsZXJ0UmVzdWx0IH0gZnJvbSBcInN3ZWV0YWxlcnQyXCI7XHJcbmltcG9ydCB7IHNoYTI1NiB9IGZyb20gXCIuLi9zZXJ2aWNlcy9lbmNvZGVcIjtcclxuXHJcbmNvbnN0IHJlcXVlc3RQYXNzd29yZCA9IGFzeW5jIChwYXNzd29yZDogc3RyaW5nKTogUHJvbWlzZTxhbnk+ID0+IHtcclxuICByZXR1cm4gYXdhaXQgU3dhbC5maXJlKHtcclxuICAgIHRpdGxlOiBcIkVudGVyIHRoZSBwYXNzd29yZFwiLFxyXG4gICAgaW5wdXQ6IFwicGFzc3dvcmRcIixcclxuICAgIHNob3dDYW5jZWxCdXR0b246IHRydWUsXHJcbiAgICBjYW5jZWxCdXR0b25UZXh0OiBcIkNhbmNlbFwiLFxyXG4gICAgY29uZmlybUJ1dHRvblRleHQ6IFwiRW50ZXJcIixcclxuICAgIGlucHV0VmFsaWRhdG9yOiAodmFsKSA9PiB7XHJcbiAgICAgIGlmICghdmFsKSB7XHJcbiAgICAgICAgcmV0dXJuIFwiUGxlc2UgZW50ZXIgdGhlIHBhc3N3b3JkXCI7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9LFxyXG4gICAgc2hvd0xvYWRlck9uQ29uZmlybTogdHJ1ZSxcclxuICAgIHByZUNvbmZpcm06IChwYXNzKSA9PiB7XHJcbiAgICAgIHJldHVybiBzaGEyNTYocGFzcykudGhlbigoaGFzaCkgPT4ge1xyXG4gICAgICAgIGlmIChoYXNoICE9PSBwYXNzd29yZCkge1xyXG4gICAgICAgICAgU3dhbC5zaG93VmFsaWRhdGlvbk1lc3NhZ2UoXCJJbmNvcnJlY3QgcGFzc3dvcmRcIik7XHJcbiAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICB9KTtcclxuICAgIH0sXHJcbiAgfSkudGhlbigodmFsKSA9PiB2YWwpO1xyXG59O1xyXG5cclxuZXhwb3J0IHsgcmVxdWVzdFBhc3N3b3JkIH07XHJcbiJdLCJuYW1lcyI6WyJTd2FsIiwic2hhMjU2IiwicmVxdWVzdFBhc3N3b3JkIiwicGFzc3dvcmQiLCJmaXJlIiwidGl0bGUiLCJpbnB1dCIsInNob3dDYW5jZWxCdXR0b24iLCJjYW5jZWxCdXR0b25UZXh0IiwiY29uZmlybUJ1dHRvblRleHQiLCJpbnB1dFZhbGlkYXRvciIsInZhbCIsInNob3dMb2FkZXJPbkNvbmZpcm0iLCJwcmVDb25maXJtIiwicGFzcyIsInRoZW4iLCJoYXNoIiwic2hvd1ZhbGlkYXRpb25NZXNzYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/Alerts.tsx\n");

/***/ }),

/***/ "./components/CardGame.tsx":
/*!*********************************!*\
  !*** ./components/CardGame.tsx ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"react/jsx-runtime\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @fortawesome/react-fontawesome */ \"@fortawesome/react-fontawesome\");\n/* harmony import */ var _fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @fortawesome/free-solid-svg-icons */ \"@fortawesome/free-solid-svg-icons\");\n/* harmony import */ var _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\nfunction CardGame({ game , handleEnterGame , roomNumber  }) {\n    return(/*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n        className: \"col col-card mb-3\",\n        __source: {\n            fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\components\\\\CardGame.tsx\",\n            lineNumber: 23\n        },\n        __self: this,\n        children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n            className: \"card card-room shadow-sm\",\n            onClick: ()=>handleEnterGame(game[0], game[1].ownerUser.username, game[1].listUsers, game[1].maxUsers, game[1].password)\n            ,\n            __source: {\n                fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\components\\\\CardGame.tsx\",\n                lineNumber: 32\n            },\n            __self: this,\n            children: [\n                /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                    className: `card-body ${game[1].visitorUser ? \"card-full\" : \"\"}`,\n                    __source: {\n                        fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\components\\\\CardGame.tsx\",\n                        lineNumber: 44\n                    },\n                    __self: this,\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", {\n                            __source: {\n                                fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\components\\\\CardGame.tsx\",\n                                lineNumber: 45\n                            },\n                            __self: this,\n                            children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"b\", {\n                                __source: {\n                                    fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\components\\\\CardGame.tsx\",\n                                    lineNumber: 46\n                                },\n                                __self: this,\n                                children: [\n                                    game[1].roomName !== \"\" ? game[1].roomName : `Sala NÂ°${roomNumber}`,\n                                    game[1].password ? /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__.FontAwesomeIcon, {\n                                        icon: _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_3__.faLock,\n                                        className: \"mx-1\",\n                                        __source: {\n                                            fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\components\\\\CardGame.tsx\",\n                                            lineNumber: 51\n                                        },\n                                        __self: this\n                                    }) : null\n                                ]\n                            })\n                        }),\n                        /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", {\n                            __source: {\n                                fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\components\\\\CardGame.tsx\",\n                                lineNumber: 55\n                            },\n                            __self: this,\n                            children: [\n                                \"Owner: \",\n                                /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"br\", {\n                                    __source: {\n                                        fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\components\\\\CardGame.tsx\",\n                                        lineNumber: 56\n                                    },\n                                    __self: this\n                                }),\n                                game[1].ownerUser.username\n                            ]\n                        })\n                    ]\n                }),\n                /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                    className: \"txt-cant-users\",\n                    __source: {\n                        fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\components\\\\CardGame.tsx\",\n                        lineNumber: 60\n                    },\n                    __self: this,\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__.FontAwesomeIcon, {\n                            icon: _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_3__.faUser,\n                            className: \"mx-1\",\n                            __source: {\n                                fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\components\\\\CardGame.tsx\",\n                                lineNumber: 61\n                            },\n                            __self: this\n                        }),\n                        game[1].listUsers ? `${Object.keys(game[1].listUsers).length}/${game[1].maxUsers}` : `1/${game[1].maxUsers}`\n                    ]\n                })\n            ]\n        })\n    }));\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CardGame);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0NhcmRHYW1lLnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQXlCO0FBRXVDO0FBQ0U7U0FpQnpESSxRQUFRLENBQUMsQ0FBQyxDQUFDQyxJQUFJLEdBQUVDLGVBQWUsR0FBRUMsVUFBVSxFQUFXLENBQUMsRUFBRSxDQUFDO0lBQ2xFLE1BQU0sc0VBQ0hDLENBQUc7UUFBQ0MsU0FBUyxFQUFDLENBQW1COzs7Ozs7d0ZBUy9CRCxDQUFHO1lBQ0ZDLFNBQVMsRUFBQyxDQUEwQjtZQUNwQ0MsT0FBTyxNQUNMSixlQUFlLENBQ2JELElBQUksQ0FBQyxDQUFDLEdBQ05BLElBQUksQ0FBQyxDQUFDLEVBQUVNLFNBQVMsQ0FBQ0MsUUFBUSxFQUMxQlAsSUFBSSxDQUFDLENBQUMsRUFBRVEsU0FBUyxFQUNqQlIsSUFBSSxDQUFDLENBQUMsRUFBRVMsUUFBUSxFQUNoQlQsSUFBSSxDQUFDLENBQUMsRUFBRVUsUUFBUTs7Ozs7Ozs7c0ZBSW5CUCxDQUFHO29CQUFDQyxTQUFTLEdBQUcsVUFBVSxFQUFFSixJQUFJLENBQUMsQ0FBQyxFQUFFVyxXQUFXLEdBQUcsQ0FBVyxhQUFHLENBQUU7Ozs7Ozs7NkZBQ2hFQyxDQUFDOzs7Ozs7NEdBQ0NDLENBQUM7Ozs7Ozs7b0NBQ0NiLElBQUksQ0FBQyxDQUFDLEVBQUVjLFFBQVEsS0FBSyxDQUFFLElBQ3BCZCxJQUFJLENBQUMsQ0FBQyxFQUFFYyxRQUFRLElBQ2YsUUFBTyxFQUFFWixVQUFVO29DQUN2QkYsSUFBSSxDQUFDLENBQUMsRUFBRVUsUUFBUSx3RUFDZGQsMkVBQWU7d0NBQUNtQixJQUFJLEVBQUVqQixxRUFBTTt3Q0FBRU0sU0FBUyxFQUFDLENBQU07Ozs7Ozt5Q0FDN0MsSUFBSTs7Ozs4RkFHWFksQ0FBSTs7Ozs7OztnQ0FBQyxDQUNHO3FHQUFDQyxDQUFFOzs7Ozs7O2dDQUNUakIsSUFBSSxDQUFDLENBQUMsRUFBRU0sU0FBUyxDQUFDQyxRQUFROzs7OztzRkFHOUJKLENBQUc7b0JBQUNDLFNBQVMsRUFBQyxDQUFnQjs7Ozs7Ozs2RkFDNUJSLDJFQUFlOzRCQUFDbUIsSUFBSSxFQUFFbEIscUVBQU07NEJBQUVPLFNBQVMsRUFBQyxDQUFNOzs7Ozs7O3dCQUM5Q0osSUFBSSxDQUFDLENBQUMsRUFBRVEsU0FBUyxNQUNYVSxNQUFNLENBQUNDLElBQUksQ0FBQ25CLElBQUksQ0FBQyxDQUFDLEVBQUVRLFNBQVMsRUFBRVksTUFBTSxDQUFDLENBQUMsRUFBRXBCLElBQUksQ0FBQyxDQUFDLEVBQUVTLFFBQVEsTUFDM0QsRUFBRSxFQUFFVCxJQUFJLENBQUMsQ0FBQyxFQUFFUyxRQUFROzs7Ozs7QUFNbkMsQ0FBQztBQUVELGlFQUFlVixRQUFRLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGljay1iYXR0bGUtbmV4dC8uL2NvbXBvbmVudHMvQ2FyZEdhbWUudHN4Pzc5YzMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgTGluayBmcm9tIFwibmV4dC9MaW5rXCI7XHJcbmltcG9ydCB7IEZvbnRBd2Vzb21lSWNvbiB9IGZyb20gXCJAZm9ydGF3ZXNvbWUvcmVhY3QtZm9udGF3ZXNvbWVcIjtcclxuaW1wb3J0IHsgZmFVc2VyLCBmYUxvY2sgfSBmcm9tIFwiQGZvcnRhd2Vzb21lL2ZyZWUtc29saWQtc3ZnLWljb25zXCI7XHJcblxyXG5pbnRlcmZhY2UgR2FtZVJvb20ge1xyXG4gIGxpc3RVc2VyczogW107XHJcbiAgbWF4VXNlcnM6IG51bWJlcjtcclxuICBvd25lclVzZXI6IHsgdXNlcm5hbWU6IHN0cmluZyB9O1xyXG4gIHZpc2l0b3JVc2VyOiBzdHJpbmc7XHJcbiAgcm9vbU5hbWU6IHN0cmluZztcclxuICBwYXNzd29yZDogc3RyaW5nO1xyXG59XHJcblxyXG50eXBlIEFwcFByb3BzID0ge1xyXG4gIGdhbWU6IFtudW1iZXIsIEdhbWVSb29tXTtcclxuICBoYW5kbGVFbnRlckdhbWU6IEZ1bmN0aW9uO1xyXG4gIHJvb21OdW1iZXI6IG51bWJlcjtcclxufTtcclxuXHJcbmZ1bmN0aW9uIENhcmRHYW1lKHsgZ2FtZSwgaGFuZGxlRW50ZXJHYW1lLCByb29tTnVtYmVyIH06IEFwcFByb3BzKSB7XHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sIGNvbC1jYXJkIG1iLTNcIj5cclxuICAgICAgey8qIDxMaW5rXHJcbiAgICAgICAgaHJlZj17XHJcbiAgICAgICAgICBnYW1lWzFdLmxpc3RVc2VycyAmJlxyXG4gICAgICAgICAgT2JqZWN0LmtleXMoZ2FtZVsxXS5saXN0VXNlcnMpLmxlbmd0aCA9PT0gZ2FtZVsxXS5tYXhVc2Vyc1xyXG4gICAgICAgICAgICA/IFwiL1wiXHJcbiAgICAgICAgICAgIDogYC9nYW1lLyR7Z2FtZVswXX1gXHJcbiAgICAgICAgfVxyXG4gICAgICA+ICovfVxyXG4gICAgICA8ZGl2XHJcbiAgICAgICAgY2xhc3NOYW1lPVwiY2FyZCBjYXJkLXJvb20gc2hhZG93LXNtXCJcclxuICAgICAgICBvbkNsaWNrPXsoKSA9PlxyXG4gICAgICAgICAgaGFuZGxlRW50ZXJHYW1lKFxyXG4gICAgICAgICAgICBnYW1lWzBdLFxyXG4gICAgICAgICAgICBnYW1lWzFdLm93bmVyVXNlci51c2VybmFtZSxcclxuICAgICAgICAgICAgZ2FtZVsxXS5saXN0VXNlcnMsXHJcbiAgICAgICAgICAgIGdhbWVbMV0ubWF4VXNlcnMsXHJcbiAgICAgICAgICAgIGdhbWVbMV0ucGFzc3dvcmRcclxuICAgICAgICAgIClcclxuICAgICAgICB9XHJcbiAgICAgID5cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17YGNhcmQtYm9keSAke2dhbWVbMV0udmlzaXRvclVzZXIgPyBcImNhcmQtZnVsbFwiIDogXCJcIn1gfT5cclxuICAgICAgICAgIDxwPlxyXG4gICAgICAgICAgICA8Yj5cclxuICAgICAgICAgICAgICB7Z2FtZVsxXS5yb29tTmFtZSAhPT0gXCJcIlxyXG4gICAgICAgICAgICAgICAgPyBnYW1lWzFdLnJvb21OYW1lXHJcbiAgICAgICAgICAgICAgICA6IGBTYWxhIE7CsCR7cm9vbU51bWJlcn1gfVxyXG4gICAgICAgICAgICAgIHtnYW1lWzFdLnBhc3N3b3JkID8gKFxyXG4gICAgICAgICAgICAgICAgPEZvbnRBd2Vzb21lSWNvbiBpY29uPXtmYUxvY2t9IGNsYXNzTmFtZT1cIm14LTFcIiAvPlxyXG4gICAgICAgICAgICAgICkgOiBudWxsfVxyXG4gICAgICAgICAgICA8L2I+XHJcbiAgICAgICAgICA8L3A+XHJcbiAgICAgICAgICA8c3Bhbj5cclxuICAgICAgICAgICAgT3duZXI6IDxiciAvPlxyXG4gICAgICAgICAgICB7Z2FtZVsxXS5vd25lclVzZXIudXNlcm5hbWV9XHJcbiAgICAgICAgICA8L3NwYW4+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0eHQtY2FudC11c2Vyc1wiPlxyXG4gICAgICAgICAgPEZvbnRBd2Vzb21lSWNvbiBpY29uPXtmYVVzZXJ9IGNsYXNzTmFtZT1cIm14LTFcIiAvPlxyXG4gICAgICAgICAge2dhbWVbMV0ubGlzdFVzZXJzXHJcbiAgICAgICAgICAgID8gYCR7T2JqZWN0LmtleXMoZ2FtZVsxXS5saXN0VXNlcnMpLmxlbmd0aH0vJHtnYW1lWzFdLm1heFVzZXJzfWBcclxuICAgICAgICAgICAgOiBgMS8ke2dhbWVbMV0ubWF4VXNlcnN9YH1cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9kaXY+XHJcbiAgICAgIHsvKiA8L0xpbms+ICovfVxyXG4gICAgPC9kaXY+XHJcbiAgKTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ2FyZEdhbWU7XHJcbiJdLCJuYW1lcyI6WyJSZWFjdCIsIkZvbnRBd2Vzb21lSWNvbiIsImZhVXNlciIsImZhTG9jayIsIkNhcmRHYW1lIiwiZ2FtZSIsImhhbmRsZUVudGVyR2FtZSIsInJvb21OdW1iZXIiLCJkaXYiLCJjbGFzc05hbWUiLCJvbkNsaWNrIiwib3duZXJVc2VyIiwidXNlcm5hbWUiLCJsaXN0VXNlcnMiLCJtYXhVc2VycyIsInBhc3N3b3JkIiwidmlzaXRvclVzZXIiLCJwIiwiYiIsInJvb21OYW1lIiwiaWNvbiIsInNwYW4iLCJiciIsIk9iamVjdCIsImtleXMiLCJsZW5ndGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/CardGame.tsx\n");

/***/ }),

/***/ "./components/modalCreateUsername.tsx":
/*!********************************************!*\
  !*** ./components/modalCreateUsername.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"react/jsx-runtime\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var firebase_database__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! firebase/database */ \"./node_modules/firebase/database/dist/index.mjs\");\n/* harmony import */ var _firebase_database__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @firebase/database */ \"@firebase/database\");\n/* harmony import */ var _firebase_database__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_firebase_database__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\nfunction ModalCreateUsername({ close  }) {\n    const { 0: name1 , 1: setName  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const db = (0,_firebase_database__WEBPACK_IMPORTED_MODULE_3__.getDatabase)();\n    const handleChange = (name)=>{\n        if (name.length <= 25) {\n            setName(name);\n        }\n    };\n    const handleCreateUser = ()=>{\n        if (name1.length >= 3) {\n            let key = sessionStorage.getItem(\"userKey\");\n            let refUser = (0,_firebase_database__WEBPACK_IMPORTED_MODULE_3__.ref)(db, `users/${key}`);\n            (0,_firebase_database__WEBPACK_IMPORTED_MODULE_3__.update)(refUser, {\n                username: name1\n            });\n            sessionStorage.setItem(\"user\", name1);\n            close();\n        }\n    };\n    return(/*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n        className: \"modal fade\",\n        id: \"modalCreateUsername\",\n        \"data-bs-backdrop\": \"static\",\n        \"data-bs-keyboard\": \"false\",\n        \"data-tabindex\": \"-1\",\n        \"aria-labelledby\": \"modalCreateUsernameLabel\",\n        \"aria-hidden\": \"true\",\n        __source: {\n            fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\components\\\\modalCreateUsername.tsx\",\n            lineNumber: 30\n        },\n        __self: this,\n        children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n            className: \"modal-dialog modal-md modal-dialog-centered\",\n            __source: {\n                fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\components\\\\modalCreateUsername.tsx\",\n                lineNumber: 39\n            },\n            __self: this,\n            children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                className: \"modal-content\",\n                __source: {\n                    fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\components\\\\modalCreateUsername.tsx\",\n                    lineNumber: 40\n                },\n                __self: this,\n                children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                    className: \"modal-body text-center\",\n                    __source: {\n                        fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\components\\\\modalCreateUsername.tsx\",\n                        lineNumber: 41\n                    },\n                    __self: this,\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"h4\", {\n                            __source: {\n                                fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\components\\\\modalCreateUsername.tsx\",\n                                lineNumber: 42\n                            },\n                            __self: this,\n                            children: \"Enter your username\"\n                        }),\n                        /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", {\n                            type: \"text\",\n                            className: \"form-name mb-2 me-5\",\n                            \"data-label\": \"username\",\n                            value: name1,\n                            placeholder: \"Username\",\n                            onChange: (ref)=>handleChange(ref.target.value)\n                            ,\n                            __source: {\n                                fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\components\\\\modalCreateUsername.tsx\",\n                                lineNumber: 43\n                            },\n                            __self: this\n                        }),\n                        /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"button\", {\n                            className: \"btn-click py-2 px-3 mb-3\",\n                            onClick: ()=>handleCreateUser()\n                            ,\n                            __source: {\n                                fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\components\\\\modalCreateUsername.tsx\",\n                                lineNumber: 51\n                            },\n                            __self: this,\n                            children: \"Choose\"\n                        })\n                    ]\n                })\n            })\n        })\n    }));\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ModalCreateUsername);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL21vZGFsQ3JlYXRlVXNlcm5hbWUudHN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUF1QztBQUNiO0FBQ21DO1NBTXBESyxtQkFBbUIsQ0FBQyxDQUFDLENBQUNDLEtBQUssRUFBVyxDQUFDLEVBQUUsQ0FBQztJQUNqRCxLQUFLLE1BQUVDLEtBQUksTUFBRUMsT0FBTyxNQUFJUCwrQ0FBUSxDQUFDLENBQUU7SUFDbkMsS0FBSyxDQUFDUSxFQUFFLEdBQUdQLCtEQUFXO0lBRXRCLEtBQUssQ0FBQ1EsWUFBWSxJQUFJSCxJQUFZLEdBQUssQ0FBQztRQUN0QyxFQUFFLEVBQUVBLElBQUksQ0FBQ0ksTUFBTSxJQUFJLEVBQUUsRUFBRSxDQUFDO1lBQ3RCSCxPQUFPLENBQUNELElBQUk7UUFDZCxDQUFDO0lBQ0gsQ0FBQztJQUVELEtBQUssQ0FBQ0ssZ0JBQWdCLE9BQVMsQ0FBQztRQUM5QixFQUFFLEVBQUVMLEtBQUksQ0FBQ0ksTUFBTSxJQUFJLENBQUMsRUFBRSxDQUFDO1lBQ3JCLEdBQUcsQ0FBQ0UsR0FBRyxHQUFHQyxjQUFjLENBQUNDLE9BQU8sQ0FBQyxDQUFTO1lBQzFDLEdBQUcsQ0FBQ0MsT0FBTyxHQUFHYix1REFBRyxDQUFDTSxFQUFFLEdBQUcsTUFBTSxFQUFFSSxHQUFHO1lBQ2xDVCwwREFBTSxDQUFDWSxPQUFPLEVBQUUsQ0FBQztnQkFBQ0MsUUFBUSxFQUFFVixLQUFJO1lBQUMsQ0FBQztZQUNsQ08sY0FBYyxDQUFDSSxPQUFPLENBQUMsQ0FBTSxPQUFFWCxLQUFJO1lBQ25DRCxLQUFLO1FBQ1AsQ0FBQztJQUNILENBQUM7SUFFRCxNQUFNLHNFQUNIYSxDQUFHO1FBQ0ZDLFNBQVMsRUFBQyxDQUFZO1FBQ3RCQyxFQUFFLEVBQUMsQ0FBcUI7UUFDeEJDLENBQWdCLG1CQUFDLENBQVE7UUFDekJDLENBQWdCLG1CQUFDLENBQU87UUFDeEJDLENBQWEsZ0JBQUMsQ0FBSTtRQUNsQkMsQ0FBZSxrQkFBQyxDQUEwQjtRQUMxQ0MsQ0FBVyxjQUFDLENBQU07Ozs7Ozt1RkFFakJQLENBQUc7WUFBQ0MsU0FBUyxFQUFDLENBQTZDOzs7Ozs7MkZBQ3pERCxDQUFHO2dCQUFDQyxTQUFTLEVBQUMsQ0FBZTs7Ozs7O2dHQUMzQkQsQ0FBRztvQkFBQ0MsU0FBUyxFQUFDLENBQXdCOzs7Ozs7OzZGQUNwQ08sQ0FBRTs7Ozs7O3NDQUFDLENBQW1COzs2RkFDdEJDLENBQUs7NEJBQ0pDLElBQUksRUFBQyxDQUFNOzRCQUNYVCxTQUFTLEVBQUMsQ0FBcUI7NEJBQy9CVSxDQUFVLGFBQUMsQ0FBVTs0QkFDckJDLEtBQUssRUFBRXhCLEtBQUk7NEJBQ1h5QixXQUFXLEVBQUMsQ0FBVTs0QkFDdEJDLFFBQVEsR0FBRzlCLEdBQUcsR0FBS08sWUFBWSxDQUFDUCxHQUFHLENBQUMrQixNQUFNLENBQUNILEtBQUs7Ozs7Ozs7OzZGQUVqREksQ0FBTTs0QkFDTGYsU0FBUyxFQUFDLENBQTBCOzRCQUNwQ2dCLE9BQU8sTUFBUXhCLGdCQUFnQjs7Ozs7OztzQ0FDaEMsQ0FFRDs7Ozs7OztBQU1aLENBQUM7QUFFRCxpRUFBZVAsbUJBQW1CLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGljay1iYXR0bGUtbmV4dC8uL2NvbXBvbmVudHMvbW9kYWxDcmVhdGVVc2VybmFtZS50c3g/NDZlOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IFwiZmlyZWJhc2UvZGF0YWJhc2VcIjtcclxuaW1wb3J0IHsgZ2V0RGF0YWJhc2UsIHJlZiwgdXBkYXRlIH0gZnJvbSBcIkBmaXJlYmFzZS9kYXRhYmFzZVwiO1xyXG5cclxudHlwZSBBcHBQcm9wcyA9IHtcclxuICBjbG9zZTogRnVuY3Rpb247XHJcbn07XHJcblxyXG5mdW5jdGlvbiBNb2RhbENyZWF0ZVVzZXJuYW1lKHsgY2xvc2UgfTogQXBwUHJvcHMpIHtcclxuICBjb25zdCBbbmFtZSwgc2V0TmFtZV0gPSB1c2VTdGF0ZShcIlwiKTtcclxuICBjb25zdCBkYiA9IGdldERhdGFiYXNlKCk7XHJcblxyXG4gIGNvbnN0IGhhbmRsZUNoYW5nZSA9IChuYW1lOiBzdHJpbmcpID0+IHtcclxuICAgIGlmIChuYW1lLmxlbmd0aCA8PSAyNSkge1xyXG4gICAgICBzZXROYW1lKG5hbWUpO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIGNvbnN0IGhhbmRsZUNyZWF0ZVVzZXIgPSAoKSA9PiB7XHJcbiAgICBpZiAobmFtZS5sZW5ndGggPj0gMykge1xyXG4gICAgICBsZXQga2V5ID0gc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbShcInVzZXJLZXlcIik7XHJcbiAgICAgIGxldCByZWZVc2VyID0gcmVmKGRiLCBgdXNlcnMvJHtrZXl9YCk7XHJcbiAgICAgIHVwZGF0ZShyZWZVc2VyLCB7IHVzZXJuYW1lOiBuYW1lIH0pO1xyXG4gICAgICBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKFwidXNlclwiLCBuYW1lKTtcclxuICAgICAgY2xvc2UoKTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPGRpdlxyXG4gICAgICBjbGFzc05hbWU9XCJtb2RhbCBmYWRlXCJcclxuICAgICAgaWQ9XCJtb2RhbENyZWF0ZVVzZXJuYW1lXCJcclxuICAgICAgZGF0YS1icy1iYWNrZHJvcD1cInN0YXRpY1wiXHJcbiAgICAgIGRhdGEtYnMta2V5Ym9hcmQ9XCJmYWxzZVwiXHJcbiAgICAgIGRhdGEtdGFiaW5kZXg9XCItMVwiXHJcbiAgICAgIGFyaWEtbGFiZWxsZWRieT1cIm1vZGFsQ3JlYXRlVXNlcm5hbWVMYWJlbFwiXHJcbiAgICAgIGFyaWEtaGlkZGVuPVwidHJ1ZVwiXHJcbiAgICA+XHJcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kYWwtZGlhbG9nIG1vZGFsLW1kIG1vZGFsLWRpYWxvZy1jZW50ZXJlZFwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kYWwtY29udGVudFwiPlxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtb2RhbC1ib2R5IHRleHQtY2VudGVyXCI+XHJcbiAgICAgICAgICAgIDxoND5FbnRlciB5b3VyIHVzZXJuYW1lPC9oND5cclxuICAgICAgICAgICAgPGlucHV0XHJcbiAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxyXG4gICAgICAgICAgICAgIGNsYXNzTmFtZT1cImZvcm0tbmFtZSBtYi0yIG1lLTVcIlxyXG4gICAgICAgICAgICAgIGRhdGEtbGFiZWw9XCJ1c2VybmFtZVwiXHJcbiAgICAgICAgICAgICAgdmFsdWU9e25hbWV9XHJcbiAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJVc2VybmFtZVwiXHJcbiAgICAgICAgICAgICAgb25DaGFuZ2U9eyhyZWYpID0+IGhhbmRsZUNoYW5nZShyZWYudGFyZ2V0LnZhbHVlKX1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPGJ1dHRvblxyXG4gICAgICAgICAgICAgIGNsYXNzTmFtZT1cImJ0bi1jbGljayBweS0yIHB4LTMgbWItM1wiXHJcbiAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gaGFuZGxlQ3JlYXRlVXNlcigpfVxyXG4gICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgQ2hvb3NlXHJcbiAgICAgICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbiAgKTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgTW9kYWxDcmVhdGVVc2VybmFtZTtcclxuIl0sIm5hbWVzIjpbIlJlYWN0IiwidXNlU3RhdGUiLCJnZXREYXRhYmFzZSIsInJlZiIsInVwZGF0ZSIsIk1vZGFsQ3JlYXRlVXNlcm5hbWUiLCJjbG9zZSIsIm5hbWUiLCJzZXROYW1lIiwiZGIiLCJoYW5kbGVDaGFuZ2UiLCJsZW5ndGgiLCJoYW5kbGVDcmVhdGVVc2VyIiwia2V5Iiwic2Vzc2lvblN0b3JhZ2UiLCJnZXRJdGVtIiwicmVmVXNlciIsInVzZXJuYW1lIiwic2V0SXRlbSIsImRpdiIsImNsYXNzTmFtZSIsImlkIiwiZGF0YS1icy1iYWNrZHJvcCIsImRhdGEtYnMta2V5Ym9hcmQiLCJkYXRhLXRhYmluZGV4IiwiYXJpYS1sYWJlbGxlZGJ5IiwiYXJpYS1oaWRkZW4iLCJoNCIsImlucHV0IiwidHlwZSIsImRhdGEtbGFiZWwiLCJ2YWx1ZSIsInBsYWNlaG9sZGVyIiwib25DaGFuZ2UiLCJ0YXJnZXQiLCJidXR0b24iLCJvbkNsaWNrIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/modalCreateUsername.tsx\n");

/***/ }),

/***/ "./components/modalLogin.tsx":
/*!***********************************!*\
  !*** ./components/modalLogin.tsx ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"react/jsx-runtime\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_google_button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-google-button */ \"react-google-button\");\n/* harmony import */ var react_google_button__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_google_button__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! firebase/auth */ \"./node_modules/firebase/auth/dist/index.mjs\");\n\n\n\n\nfunction ModalLogin({ loginGoogle , loginGuest , close  }) {\n    const { 0: isMobile , 1: setIsMobile  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const { 0: guestUser , 1: setGuestUser  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const auth = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_3__.getAuth)();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        let mounted = true;\n        if (false) {}\n        return ()=>{\n            mounted = false;\n        };\n    }, []);\n    const handleLogin = ()=>{\n        const provider = new firebase_auth__WEBPACK_IMPORTED_MODULE_3__.GoogleAuthProvider();\n        (0,firebase_auth__WEBPACK_IMPORTED_MODULE_3__.signInWithPopup)(auth, provider).then((result)=>{\n            loginGoogle(result);\n        }).catch((error)=>console.log(error.message)\n        ).finally(()=>{\n            close();\n        });\n    };\n    const handleLoginGuest = (e)=>{\n        e.preventDefault();\n        loginGuest(guestUser);\n    };\n    const handleChange = (name)=>{\n        if (name.length <= 25) {\n            setGuestUser(name);\n        }\n    };\n    return(/*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n        className: \"modal fade\",\n        \"data-bs-backdrop\": \"static\",\n        \"data-bs-keyboard\": \"false\",\n        id: \"modalLogin\",\n        \"data-tabindex\": \"-1\",\n        \"aria-labelledby\": \"modalLoginLabel\",\n        \"aria-hidden\": \"true\",\n        __source: {\n            fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\components\\\\modalLogin.tsx\",\n            lineNumber: 71\n        },\n        __self: this,\n        children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n            className: \"modal-dialog modal-lg modal-dialog-centered\",\n            __source: {\n                fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\components\\\\modalLogin.tsx\",\n                lineNumber: 80\n            },\n            __self: this,\n            children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                className: \"modal-content\",\n                __source: {\n                    fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\components\\\\modalLogin.tsx\",\n                    lineNumber: 81\n                },\n                __self: this,\n                children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                    className: \"modal-body content-login-modal\",\n                    __source: {\n                        fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\components\\\\modalLogin.tsx\",\n                        lineNumber: 82\n                    },\n                    __self: this,\n                    children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                        className: \"row w-100\",\n                        __source: {\n                            fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\components\\\\modalLogin.tsx\",\n                            lineNumber: 83\n                        },\n                        __self: this,\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                                className: \"col-lg-6 text-center align-self-center\",\n                                __source: {\n                                    fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\components\\\\modalLogin.tsx\",\n                                    lineNumber: 84\n                                },\n                                __self: this,\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"h5\", {\n                                        __source: {\n                                            fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\components\\\\modalLogin.tsx\",\n                                            lineNumber: 85\n                                        },\n                                        __self: this,\n                                        children: \"Login as guest\"\n                                    }),\n                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"form\", {\n                                        __source: {\n                                            fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\components\\\\modalLogin.tsx\",\n                                            lineNumber: 86\n                                        },\n                                        __self: this,\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", {\n                                                type: \"text\",\n                                                className: \"form-name mb-2\",\n                                                \"data-label\": \"username\",\n                                                \"data-value\": guestUser,\n                                                placeholder: \"Username\",\n                                                onChange: (ref)=>handleChange(ref.target.value)\n                                                ,\n                                                __source: {\n                                                    fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\components\\\\modalLogin.tsx\",\n                                                    lineNumber: 87\n                                                },\n                                                __self: this\n                                            }),\n                                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"br\", {\n                                                __source: {\n                                                    fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\components\\\\modalLogin.tsx\",\n                                                    lineNumber: 95\n                                                },\n                                                __self: this\n                                            }),\n                                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"button\", {\n                                                className: \"btn-click py-2 px-3 mb-3\",\n                                                onClick: (e)=>handleLoginGuest(e)\n                                                ,\n                                                type: \"submit\",\n                                                __source: {\n                                                    fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\components\\\\modalLogin.tsx\",\n                                                    lineNumber: 96\n                                                },\n                                                __self: this,\n                                                children: \"Login\"\n                                            })\n                                        ]\n                                    })\n                                ]\n                            }),\n                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                                className: `col-lg-6 text-center align-self-center ${isMobile ? \"border-top mt-4 pt-4\" : \"border-start\"}`,\n                                __source: {\n                                    fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\components\\\\modalLogin.tsx\",\n                                    lineNumber: 105\n                                },\n                                __self: this,\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"h5\", {\n                                        __source: {\n                                            fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\components\\\\modalLogin.tsx\",\n                                            lineNumber: 110\n                                        },\n                                        __self: this,\n                                        children: \"Login with Google\"\n                                    }),\n                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)((react_google_button__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                        id: \"btnGoogle\",\n                                        onClick: ()=>handleLogin()\n                                        ,\n                                        __source: {\n                                            fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\components\\\\modalLogin.tsx\",\n                                            lineNumber: 111\n                                        },\n                                        __self: this\n                                    })\n                                ]\n                            })\n                        ]\n                    })\n                })\n            })\n        })\n    }));\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ModalLogin);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL21vZGFsTG9naW4udHN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUtjO0FBQ2dDO0FBQzhCO1NBUW5FTyxVQUFVLENBQUMsQ0FBQyxDQUFDQyxXQUFXLEdBQUVDLFVBQVUsR0FBRUMsS0FBSyxFQUFXLENBQUMsRUFBRSxDQUFDO0lBQ2pFLEtBQUssTUFBRUMsUUFBUSxNQUFFQyxXQUFXLE1BQUlWLCtDQUFRLENBQVUsS0FBSztJQUN2RCxLQUFLLE1BQUVXLFNBQVMsTUFBRUMsWUFBWSxNQUFJWiwrQ0FBUSxDQUFTLENBQUU7SUFDckQsS0FBSyxDQUFDYSxJQUFJLEdBQUdYLHNEQUFPO0lBRXBCSCxnREFBUyxLQUFPLENBQUM7UUFDZixHQUFHLENBQUNlLE9BQU8sR0FBRyxJQUFJO1FBQ2xCLEVBQUUsRUFBRUMsS0FBMEIsRUFBRSxFQWdCL0I7UUFDRCxNQUFNLEtBQU8sQ0FBQztZQUNaRCxPQUFPLEdBQUcsS0FBSztRQUNqQixDQUFDO0lBQ0gsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUVMLEtBQUssQ0FBQ00sV0FBVyxPQUFTLENBQUM7UUFDekIsS0FBSyxDQUFDQyxRQUFRLEdBQUcsR0FBRyxDQUFDbEIsNkRBQWtCO1FBQ3ZDQyw4REFBZSxDQUFDUyxJQUFJLEVBQUVRLFFBQVEsRUFDM0JDLElBQUksRUFBRUMsTUFBTSxHQUFLLENBQUM7WUFDakJqQixXQUFXLENBQUNpQixNQUFNO1FBQ3BCLENBQUMsRUFDQUMsS0FBSyxFQUFFQyxLQUFLLEdBQUtDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDRixLQUFLLENBQUNHLE9BQU87VUFDMUNDLE9BQU8sS0FBTyxDQUFDO1lBQ2RyQixLQUFLO1FBQ1AsQ0FBQztJQUNMLENBQUM7SUFFRCxLQUFLLENBQUNzQixnQkFBZ0IsSUFDcEJDLENBQWtELEdBQy9DLENBQUM7UUFDSkEsQ0FBQyxDQUFDQyxjQUFjO1FBQ2hCekIsVUFBVSxDQUFDSSxTQUFTO0lBQ3RCLENBQUM7SUFFRCxLQUFLLENBQUNzQixZQUFZLElBQUlDLElBQVksR0FBSyxDQUFDO1FBQ3RDLEVBQUUsRUFBRUEsSUFBSSxDQUFDQyxNQUFNLElBQUksRUFBRSxFQUFFLENBQUM7WUFDdEJ2QixZQUFZLENBQUNzQixJQUFJO1FBQ25CLENBQUM7SUFDSCxDQUFDO0lBRUQsTUFBTSxzRUFDSEUsQ0FBRztRQUNGQyxTQUFTLEVBQUMsQ0FBWTtRQUN0QkMsQ0FBZ0IsbUJBQUMsQ0FBUTtRQUN6QkMsQ0FBZ0IsbUJBQUMsQ0FBTztRQUN4QkMsRUFBRSxFQUFDLENBQVk7UUFDZkMsQ0FBYSxnQkFBQyxDQUFJO1FBQ2xCQyxDQUFlLGtCQUFDLENBQWlCO1FBQ2pDQyxDQUFXLGNBQUMsQ0FBTTs7Ozs7O3VGQUVqQlAsQ0FBRztZQUFDQyxTQUFTLEVBQUMsQ0FBNkM7Ozs7OzsyRkFDekRELENBQUc7Z0JBQUNDLFNBQVMsRUFBQyxDQUFlOzs7Ozs7K0ZBQzNCRCxDQUFHO29CQUFDQyxTQUFTLEVBQUMsQ0FBZ0M7Ozs7OztvR0FDNUNELENBQUc7d0JBQUNDLFNBQVMsRUFBQyxDQUFXOzs7Ozs7O2tHQUN2QkQsQ0FBRztnQ0FBQ0MsU0FBUyxFQUFDLENBQXdDOzs7Ozs7O3lHQUNwRE8sQ0FBRTs7Ozs7O2tEQUFDLENBQWM7OzBHQUNqQkMsQ0FBSTs7Ozs7OztpSEFDRkMsQ0FBSztnREFDSkMsSUFBSSxFQUFDLENBQU07Z0RBQ1hWLFNBQVMsRUFBQyxDQUFnQjtnREFDMUJXLENBQVUsYUFBQyxDQUFVO2dEQUNyQkMsQ0FBVSxhQUFFdEMsU0FBUztnREFDckJ1QyxXQUFXLEVBQUMsQ0FBVTtnREFDdEJDLFFBQVEsR0FBR0MsR0FBRyxHQUFLbkIsWUFBWSxDQUFDbUIsR0FBRyxDQUFDQyxNQUFNLENBQUNDLEtBQUs7Ozs7Ozs7O2lIQUVqREMsQ0FBRTs7Ozs7OztpSEFDRkMsQ0FBTTtnREFDTG5CLFNBQVMsRUFBQyxDQUEwQjtnREFDcENvQixPQUFPLEdBQUcxQixDQUFDLEdBQUtELGdCQUFnQixDQUFDQyxDQUFDOztnREFDbENnQixJQUFJLEVBQUMsQ0FBUTs7Ozs7OzBEQUNkLENBRUQ7Ozs7OztrR0FHSFgsQ0FBRztnQ0FDRkMsU0FBUyxHQUFHLHVDQUF1QyxFQUNqRDVCLFFBQVEsR0FBRyxDQUFzQix3QkFBRyxDQUFjOzs7Ozs7O3lHQUduRG1DLENBQUU7Ozs7OztrREFBQyxDQUFpQjs7eUdBQ3BCM0MsNERBQVk7d0NBQUN1QyxFQUFFLEVBQUMsQ0FBVzt3Q0FBQ2lCLE9BQU8sTUFBUXJDLFdBQVc7Ozs7Ozs7Ozs7Ozs7Ozs7QUFRdkUsQ0FBQztBQUVELGlFQUFlZixVQUFVLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGljay1iYXR0bGUtbmV4dC8uL2NvbXBvbmVudHMvbW9kYWxMb2dpbi50c3g/M2IyZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHtcclxuICBDaGFuZ2VFdmVudEhhbmRsZXIsXHJcbiAgTW91c2VFdmVudEhhbmRsZXIsXHJcbiAgdXNlRWZmZWN0LFxyXG4gIHVzZVN0YXRlLFxyXG59IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgR29vZ2xlQnV0dG9uIGZyb20gXCJyZWFjdC1nb29nbGUtYnV0dG9uXCI7XHJcbmltcG9ydCB7IGdldEF1dGgsIEdvb2dsZUF1dGhQcm92aWRlciwgc2lnbkluV2l0aFBvcHVwIH0gZnJvbSBcImZpcmViYXNlL2F1dGhcIjtcclxuXHJcbnR5cGUgQXBwUHJvcHMgPSB7XHJcbiAgbG9naW5Hb29nbGU6IEZ1bmN0aW9uO1xyXG4gIGxvZ2luR3Vlc3Q6IEZ1bmN0aW9uO1xyXG4gIGNsb3NlOiBGdW5jdGlvbjtcclxufTtcclxuXHJcbmZ1bmN0aW9uIE1vZGFsTG9naW4oeyBsb2dpbkdvb2dsZSwgbG9naW5HdWVzdCwgY2xvc2UgfTogQXBwUHJvcHMpIHtcclxuICBjb25zdCBbaXNNb2JpbGUsIHNldElzTW9iaWxlXSA9IHVzZVN0YXRlPEJvb2xlYW4+KGZhbHNlKTtcclxuICBjb25zdCBbZ3Vlc3RVc2VyLCBzZXRHdWVzdFVzZXJdID0gdXNlU3RhdGU8U3RyaW5nPihcIlwiKTtcclxuICBjb25zdCBhdXRoID0gZ2V0QXV0aCgpO1xyXG5cclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgbGV0IG1vdW50ZWQgPSB0cnVlO1xyXG4gICAgaWYgKHByb2Nlc3MuYnJvd3NlciAmJiBtb3VudGVkKSB7XHJcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwicmVzaXplXCIsICgpID0+IHtcclxuICAgICAgICBpZiAod2luZG93LmlubmVyV2lkdGggPiA5OTIpIHtcclxuICAgICAgICAgIHNldElzTW9iaWxlKGZhbHNlKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgc2V0SXNNb2JpbGUodHJ1ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLCAoKSA9PiB7XHJcbiAgICAgICAgaWYgKHdpbmRvdy5pbm5lcldpZHRoID4gOTkyKSB7XHJcbiAgICAgICAgICBzZXRJc01vYmlsZShmYWxzZSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHNldElzTW9iaWxlKHRydWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gKCkgPT4ge1xyXG4gICAgICBtb3VudGVkID0gZmFsc2U7XHJcbiAgICB9O1xyXG4gIH0sIFtdKTtcclxuXHJcbiAgY29uc3QgaGFuZGxlTG9naW4gPSAoKSA9PiB7XHJcbiAgICBjb25zdCBwcm92aWRlciA9IG5ldyBHb29nbGVBdXRoUHJvdmlkZXIoKTtcclxuICAgIHNpZ25JbldpdGhQb3B1cChhdXRoLCBwcm92aWRlcilcclxuICAgICAgLnRoZW4oKHJlc3VsdCkgPT4ge1xyXG4gICAgICAgIGxvZ2luR29vZ2xlKHJlc3VsdCk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaCgoZXJyb3IpID0+IGNvbnNvbGUubG9nKGVycm9yLm1lc3NhZ2UpKVxyXG4gICAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgICAgY2xvc2UoKTtcclxuICAgICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgaGFuZGxlTG9naW5HdWVzdCA9IChcclxuICAgIGU6IFJlYWN0Lk1vdXNlRXZlbnQ8SFRNTEJ1dHRvbkVsZW1lbnQsIE1vdXNlRXZlbnQ+XHJcbiAgKSA9PiB7XHJcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICBsb2dpbkd1ZXN0KGd1ZXN0VXNlcik7XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgaGFuZGxlQ2hhbmdlID0gKG5hbWU6IHN0cmluZykgPT4ge1xyXG4gICAgaWYgKG5hbWUubGVuZ3RoIDw9IDI1KSB7XHJcbiAgICAgIHNldEd1ZXN0VXNlcihuYW1lKTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPGRpdlxyXG4gICAgICBjbGFzc05hbWU9XCJtb2RhbCBmYWRlXCJcclxuICAgICAgZGF0YS1icy1iYWNrZHJvcD1cInN0YXRpY1wiXHJcbiAgICAgIGRhdGEtYnMta2V5Ym9hcmQ9XCJmYWxzZVwiXHJcbiAgICAgIGlkPVwibW9kYWxMb2dpblwiXHJcbiAgICAgIGRhdGEtdGFiaW5kZXg9XCItMVwiXHJcbiAgICAgIGFyaWEtbGFiZWxsZWRieT1cIm1vZGFsTG9naW5MYWJlbFwiXHJcbiAgICAgIGFyaWEtaGlkZGVuPVwidHJ1ZVwiXHJcbiAgICA+XHJcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kYWwtZGlhbG9nIG1vZGFsLWxnIG1vZGFsLWRpYWxvZy1jZW50ZXJlZFwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibW9kYWwtY29udGVudFwiPlxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtb2RhbC1ib2R5IGNvbnRlbnQtbG9naW4tbW9kYWxcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyb3cgdy0xMDBcIj5cclxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbC1sZy02IHRleHQtY2VudGVyIGFsaWduLXNlbGYtY2VudGVyXCI+XHJcbiAgICAgICAgICAgICAgICA8aDU+TG9naW4gYXMgZ3Vlc3Q8L2g1PlxyXG4gICAgICAgICAgICAgICAgPGZvcm0+XHJcbiAgICAgICAgICAgICAgICAgIDxpbnB1dFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcclxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJmb3JtLW5hbWUgbWItMlwiXHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YS1sYWJlbD1cInVzZXJuYW1lXCJcclxuICAgICAgICAgICAgICAgICAgICBkYXRhLXZhbHVlPXtndWVzdFVzZXJ9XHJcbiAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJVc2VybmFtZVwiXHJcbiAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhyZWYpID0+IGhhbmRsZUNoYW5nZShyZWYudGFyZ2V0LnZhbHVlKX1cclxuICAgICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICAgICAgPGJyIC8+XHJcbiAgICAgICAgICAgICAgICAgIDxidXR0b25cclxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJidG4tY2xpY2sgcHktMiBweC0zIG1iLTNcIlxyXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eyhlKSA9PiBoYW5kbGVMb2dpbkd1ZXN0KGUpfVxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU9XCJzdWJtaXRcIlxyXG4gICAgICAgICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgICAgICAgTG9naW5cclxuICAgICAgICAgICAgICAgICAgPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8L2Zvcm0+XHJcbiAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtgY29sLWxnLTYgdGV4dC1jZW50ZXIgYWxpZ24tc2VsZi1jZW50ZXIgJHtcclxuICAgICAgICAgICAgICAgICAgaXNNb2JpbGUgPyBcImJvcmRlci10b3AgbXQtNCBwdC00XCIgOiBcImJvcmRlci1zdGFydFwiXHJcbiAgICAgICAgICAgICAgICB9YH1cclxuICAgICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgICA8aDU+TG9naW4gd2l0aCBHb29nbGU8L2g1PlxyXG4gICAgICAgICAgICAgICAgPEdvb2dsZUJ1dHRvbiBpZD1cImJ0bkdvb2dsZVwiIG9uQ2xpY2s9eygpID0+IGhhbmRsZUxvZ2luKCl9IC8+XHJcbiAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbiAgKTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgTW9kYWxMb2dpbjtcclxuIl0sIm5hbWVzIjpbIlJlYWN0IiwidXNlRWZmZWN0IiwidXNlU3RhdGUiLCJHb29nbGVCdXR0b24iLCJnZXRBdXRoIiwiR29vZ2xlQXV0aFByb3ZpZGVyIiwic2lnbkluV2l0aFBvcHVwIiwiTW9kYWxMb2dpbiIsImxvZ2luR29vZ2xlIiwibG9naW5HdWVzdCIsImNsb3NlIiwiaXNNb2JpbGUiLCJzZXRJc01vYmlsZSIsImd1ZXN0VXNlciIsInNldEd1ZXN0VXNlciIsImF1dGgiLCJtb3VudGVkIiwicHJvY2VzcyIsImJyb3dzZXIiLCJ3aW5kb3ciLCJhZGRFdmVudExpc3RlbmVyIiwiaW5uZXJXaWR0aCIsImhhbmRsZUxvZ2luIiwicHJvdmlkZXIiLCJ0aGVuIiwicmVzdWx0IiwiY2F0Y2giLCJlcnJvciIsImNvbnNvbGUiLCJsb2ciLCJtZXNzYWdlIiwiZmluYWxseSIsImhhbmRsZUxvZ2luR3Vlc3QiLCJlIiwicHJldmVudERlZmF1bHQiLCJoYW5kbGVDaGFuZ2UiLCJuYW1lIiwibGVuZ3RoIiwiZGl2IiwiY2xhc3NOYW1lIiwiZGF0YS1icy1iYWNrZHJvcCIsImRhdGEtYnMta2V5Ym9hcmQiLCJpZCIsImRhdGEtdGFiaW5kZXgiLCJhcmlhLWxhYmVsbGVkYnkiLCJhcmlhLWhpZGRlbiIsImg1IiwiZm9ybSIsImlucHV0IiwidHlwZSIsImRhdGEtbGFiZWwiLCJkYXRhLXZhbHVlIiwicGxhY2Vob2xkZXIiLCJvbkNoYW5nZSIsInJlZiIsInRhcmdldCIsInZhbHVlIiwiYnIiLCJidXR0b24iLCJvbkNsaWNrIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/modalLogin.tsx\n");

/***/ }),

/***/ "./node_modules/next/dist/client/normalize-trailing-slash.js":
/*!*******************************************************************!*\
  !*** ./node_modules/next/dist/client/normalize-trailing-slash.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.removePathTrailingSlash = removePathTrailingSlash;\nexports.normalizePathTrailingSlash = void 0;\nfunction removePathTrailingSlash(path) {\n    return path.endsWith('/') && path !== '/' ? path.slice(0, -1) : path;\n}\nconst normalizePathTrailingSlash =  false ? 0 : removePathTrailingSlash;\nexports.normalizePathTrailingSlash = normalizePathTrailingSlash; //# sourceMappingURL=normalize-trailing-slash.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9ub3JtYWxpemUtdHJhaWxpbmctc2xhc2guanMuanMiLCJtYXBwaW5ncyI6IkFBQVk7QUFDWkEsOENBQTZDLENBQUM7SUFDMUNHLEtBQUssRUFBRSxJQUFJO0FBQ2YsQ0FBQyxFQUFDO0FBQ0ZELCtCQUErQixHQUFHRSx1QkFBdUI7QUFDekRGLGtDQUFrQyxHQUFHLElBQUksQ0FBQyxDQUFDO1NBQ2xDRSx1QkFBdUIsQ0FBQ0UsSUFBSSxFQUFFLENBQUM7SUFDcEMsTUFBTSxDQUFDQSxJQUFJLENBQUNDLFFBQVEsQ0FBQyxDQUFHLE9BQUtELElBQUksS0FBSyxDQUFHLEtBQUdBLElBQUksQ0FBQ0UsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUlGLElBQUk7QUFDeEUsQ0FBQztBQUNELEtBQUssQ0FBQ0QsMEJBQTBCLEdBQUdJLE1BQWlDLEdBQUcsQ0FRdEUsR0FBR0wsdUJBQXVCO0FBQzNCRixrQ0FBa0MsR0FBR0csMEJBQTBCLENBRS9ELENBQW9EIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xpY2stYmF0dGxlLW5leHQvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9ub3JtYWxpemUtdHJhaWxpbmctc2xhc2guanM/NGMyZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMucmVtb3ZlUGF0aFRyYWlsaW5nU2xhc2ggPSByZW1vdmVQYXRoVHJhaWxpbmdTbGFzaDtcbmV4cG9ydHMubm9ybWFsaXplUGF0aFRyYWlsaW5nU2xhc2ggPSB2b2lkIDA7XG5mdW5jdGlvbiByZW1vdmVQYXRoVHJhaWxpbmdTbGFzaChwYXRoKSB7XG4gICAgcmV0dXJuIHBhdGguZW5kc1dpdGgoJy8nKSAmJiBwYXRoICE9PSAnLycgPyBwYXRoLnNsaWNlKDAsIC0xKSA6IHBhdGg7XG59XG5jb25zdCBub3JtYWxpemVQYXRoVHJhaWxpbmdTbGFzaCA9IHByb2Nlc3MuZW52Ll9fTkVYVF9UUkFJTElOR19TTEFTSCA/IChwYXRoKT0+e1xuICAgIGlmICgvXFwuW14vXStcXC8/JC8udGVzdChwYXRoKSkge1xuICAgICAgICByZXR1cm4gcmVtb3ZlUGF0aFRyYWlsaW5nU2xhc2gocGF0aCk7XG4gICAgfSBlbHNlIGlmIChwYXRoLmVuZHNXaXRoKCcvJykpIHtcbiAgICAgICAgcmV0dXJuIHBhdGg7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHBhdGggKyAnLyc7XG4gICAgfVxufSA6IHJlbW92ZVBhdGhUcmFpbGluZ1NsYXNoO1xuZXhwb3J0cy5ub3JtYWxpemVQYXRoVHJhaWxpbmdTbGFzaCA9IG5vcm1hbGl6ZVBhdGhUcmFpbGluZ1NsYXNoO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1ub3JtYWxpemUtdHJhaWxpbmctc2xhc2guanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwicmVtb3ZlUGF0aFRyYWlsaW5nU2xhc2giLCJub3JtYWxpemVQYXRoVHJhaWxpbmdTbGFzaCIsInBhdGgiLCJlbmRzV2l0aCIsInNsaWNlIiwicHJvY2VzcyIsImVudiIsIl9fTkVYVF9UUkFJTElOR19TTEFTSCIsInRlc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/normalize-trailing-slash.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/request-idle-callback.js":
/*!****************************************************************!*\
  !*** ./node_modules/next/dist/client/request-idle-callback.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.cancelIdleCallback = exports.requestIdleCallback = void 0;\nconst requestIdleCallback = typeof self !== 'undefined' && self.requestIdleCallback && self.requestIdleCallback.bind(window) || function(cb) {\n    let start = Date.now();\n    return setTimeout(function() {\n        cb({\n            didTimeout: false,\n            timeRemaining: function() {\n                return Math.max(0, 50 - (Date.now() - start));\n            }\n        });\n    }, 1);\n};\nexports.requestIdleCallback = requestIdleCallback;\nconst cancelIdleCallback = typeof self !== 'undefined' && self.cancelIdleCallback && self.cancelIdleCallback.bind(window) || function(id) {\n    return clearTimeout(id);\n};\nexports.cancelIdleCallback = cancelIdleCallback; //# sourceMappingURL=request-idle-callback.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9yZXF1ZXN0LWlkbGUtY2FsbGJhY2suanMuanMiLCJtYXBwaW5ncyI6IkFBQVk7QUFDWkEsOENBQTZDLENBQUM7SUFDMUNHLEtBQUssRUFBRSxJQUFJO0FBQ2YsQ0FBQyxFQUFDO0FBQ0ZELDBCQUEwQixHQUFHQSwyQkFBMkIsR0FBRyxJQUFJLENBQUMsQ0FBQztBQUNqRSxLQUFLLENBQUNHLG1CQUFtQixHQUFHLE1BQU0sQ0FBQ0MsSUFBSSxLQUFLLENBQVcsY0FBSUEsSUFBSSxDQUFDRCxtQkFBbUIsSUFBSUMsSUFBSSxDQUFDRCxtQkFBbUIsQ0FBQ0UsSUFBSSxDQUFDQyxNQUFNLEtBQUssUUFBUSxDQUFDQyxFQUFFLEVBQUUsQ0FBQztJQUMxSSxHQUFHLENBQUNDLEtBQUssR0FBR0MsSUFBSSxDQUFDQyxHQUFHO0lBQ3BCLE1BQU0sQ0FBQ0MsVUFBVSxDQUFDLFFBQVEsR0FBRyxDQUFDO1FBQzFCSixFQUFFLENBQUMsQ0FBQztZQUNBSyxVQUFVLEVBQUUsS0FBSztZQUNqQkMsYUFBYSxFQUFFLFFBQVEsR0FBRyxDQUFDO2dCQUN2QixNQUFNLENBQUNDLElBQUksQ0FBQ0MsR0FBRyxDQUFDLENBQUMsRUFBRSxFQUFFLElBQUlOLElBQUksQ0FBQ0MsR0FBRyxLQUFLRixLQUFLO1lBQy9DLENBQUM7UUFDTCxDQUFDO0lBQ0wsQ0FBQyxFQUFFLENBQUM7QUFDUixDQUFDO0FBQ0RSLDJCQUEyQixHQUFHRyxtQkFBbUI7QUFDakQsS0FBSyxDQUFDRCxrQkFBa0IsR0FBRyxNQUFNLENBQUNFLElBQUksS0FBSyxDQUFXLGNBQUlBLElBQUksQ0FBQ0Ysa0JBQWtCLElBQUlFLElBQUksQ0FBQ0Ysa0JBQWtCLENBQUNHLElBQUksQ0FBQ0MsTUFBTSxLQUFLLFFBQVEsQ0FBQ1UsRUFBRSxFQUFFLENBQUM7SUFDdkksTUFBTSxDQUFDQyxZQUFZLENBQUNELEVBQUU7QUFDMUIsQ0FBQztBQUNEaEIsMEJBQTBCLEdBQUdFLGtCQUFrQixDQUUvQyxDQUFpRCIsInNvdXJjZXMiOlsid2VicGFjazovL2NsaWNrLWJhdHRsZS1uZXh0Ly4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvcmVxdWVzdC1pZGxlLWNhbGxiYWNrLmpzPzFlMjAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmNhbmNlbElkbGVDYWxsYmFjayA9IGV4cG9ydHMucmVxdWVzdElkbGVDYWxsYmFjayA9IHZvaWQgMDtcbmNvbnN0IHJlcXVlc3RJZGxlQ2FsbGJhY2sgPSB0eXBlb2Ygc2VsZiAhPT0gJ3VuZGVmaW5lZCcgJiYgc2VsZi5yZXF1ZXN0SWRsZUNhbGxiYWNrICYmIHNlbGYucmVxdWVzdElkbGVDYWxsYmFjay5iaW5kKHdpbmRvdykgfHwgZnVuY3Rpb24oY2IpIHtcbiAgICBsZXQgc3RhcnQgPSBEYXRlLm5vdygpO1xuICAgIHJldHVybiBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICBjYih7XG4gICAgICAgICAgICBkaWRUaW1lb3V0OiBmYWxzZSxcbiAgICAgICAgICAgIHRpbWVSZW1haW5pbmc6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBNYXRoLm1heCgwLCA1MCAtIChEYXRlLm5vdygpIC0gc3RhcnQpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSwgMSk7XG59O1xuZXhwb3J0cy5yZXF1ZXN0SWRsZUNhbGxiYWNrID0gcmVxdWVzdElkbGVDYWxsYmFjaztcbmNvbnN0IGNhbmNlbElkbGVDYWxsYmFjayA9IHR5cGVvZiBzZWxmICE9PSAndW5kZWZpbmVkJyAmJiBzZWxmLmNhbmNlbElkbGVDYWxsYmFjayAmJiBzZWxmLmNhbmNlbElkbGVDYWxsYmFjay5iaW5kKHdpbmRvdykgfHwgZnVuY3Rpb24oaWQpIHtcbiAgICByZXR1cm4gY2xlYXJUaW1lb3V0KGlkKTtcbn07XG5leHBvcnRzLmNhbmNlbElkbGVDYWxsYmFjayA9IGNhbmNlbElkbGVDYWxsYmFjaztcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVxdWVzdC1pZGxlLWNhbGxiYWNrLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImNhbmNlbElkbGVDYWxsYmFjayIsInJlcXVlc3RJZGxlQ2FsbGJhY2siLCJzZWxmIiwiYmluZCIsIndpbmRvdyIsImNiIiwic3RhcnQiLCJEYXRlIiwibm93Iiwic2V0VGltZW91dCIsImRpZFRpbWVvdXQiLCJ0aW1lUmVtYWluaW5nIiwiTWF0aCIsIm1heCIsImlkIiwiY2xlYXJUaW1lb3V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/request-idle-callback.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/route-loader.js":
/*!*******************************************************!*\
  !*** ./node_modules/next/dist/client/route-loader.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.markAssetError = markAssetError;\nexports.isAssetError = isAssetError;\nexports.getClientBuildManifest = getClientBuildManifest;\nexports.getMiddlewareManifest = getMiddlewareManifest;\nexports.createRouteLoader = createRouteLoader;\nvar _getAssetPathFromRoute = _interopRequireDefault(__webpack_require__(/*! ../shared/lib/router/utils/get-asset-path-from-route */ \"../shared/lib/router/utils/get-asset-path-from-route\"));\nvar _requestIdleCallback = __webpack_require__(/*! ./request-idle-callback */ \"./node_modules/next/dist/client/request-idle-callback.js\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n// 3.8s was arbitrarily chosen as it's what https://web.dev/interactive\n// considers as \"Good\" time-to-interactive. We must assume something went\n// wrong beyond this point, and then fall-back to a full page transition to\n// show the user something of value.\nconst MS_MAX_IDLE_DELAY = 3800;\nfunction withFuture(key, map, generator) {\n    let entry = map.get(key);\n    if (entry) {\n        if ('future' in entry) {\n            return entry.future;\n        }\n        return Promise.resolve(entry);\n    }\n    let resolver;\n    const prom = new Promise((resolve)=>{\n        resolver = resolve;\n    });\n    map.set(key, entry = {\n        resolve: resolver,\n        future: prom\n    });\n    return generator ? generator() // eslint-disable-next-line no-sequences\n    .then((value)=>(resolver(value), value)\n    ).catch((err)=>{\n        map.delete(key);\n        throw err;\n    }) : prom;\n}\nfunction hasPrefetch(link) {\n    try {\n        link = document.createElement('link');\n        return(// with relList.support\n        (!!window.MSInputMethodContext && !!document.documentMode) || link.relList.supports('prefetch'));\n    } catch (e) {\n        return false;\n    }\n}\nconst canPrefetch = hasPrefetch();\nfunction prefetchViaDom(href, as, link) {\n    return new Promise((res, rej)=>{\n        const selector = `\n      link[rel=\"prefetch\"][href^=\"${href}\"],\n      link[rel=\"preload\"][href^=\"${href}\"],\n      script[src^=\"${href}\"]`;\n        if (document.querySelector(selector)) {\n            return res();\n        }\n        link = document.createElement('link');\n        // The order of property assignment here is intentional:\n        if (as) link.as = as;\n        link.rel = `prefetch`;\n        link.crossOrigin = undefined;\n        link.onload = res;\n        link.onerror = rej;\n        // `href` should always be last:\n        link.href = href;\n        document.head.appendChild(link);\n    });\n}\nconst ASSET_LOAD_ERROR = Symbol('ASSET_LOAD_ERROR');\nfunction markAssetError(err) {\n    return Object.defineProperty(err, ASSET_LOAD_ERROR, {\n    });\n}\nfunction isAssetError(err) {\n    return err && ASSET_LOAD_ERROR in err;\n}\nfunction appendScript(src, script) {\n    return new Promise((resolve, reject)=>{\n        script = document.createElement('script');\n        // The order of property assignment here is intentional.\n        // 1. Setup success/failure hooks in case the browser synchronously\n        //    executes when `src` is set.\n        script.onload = resolve;\n        script.onerror = ()=>reject(markAssetError(new Error(`Failed to load script: ${src}`)))\n        ;\n        // 2. Configure the cross-origin attribute before setting `src` in case the\n        //    browser begins to fetch.\n        script.crossOrigin = undefined;\n        // 3. Finally, set the source and inject into the DOM in case the child\n        //    must be appended for fetching to start.\n        script.src = src;\n        document.body.appendChild(script);\n    });\n}\n// We wait for pages to be built in dev before we start the route transition\n// timeout to prevent an un-necessary hard navigation in development.\nlet devBuildPromise;\n// Resolve a promise that times out after given amount of milliseconds.\nfunction resolvePromiseWithTimeout(p, ms, err) {\n    return new Promise((resolve, reject)=>{\n        let cancelled = false;\n        p.then((r)=>{\n            // Resolved, cancel the timeout\n            cancelled = true;\n            resolve(r);\n        }).catch(reject);\n        // We wrap these checks separately for better dead-code elimination in\n        // production bundles.\n        if (true) {\n            (devBuildPromise || Promise.resolve()).then(()=>{\n                (0, _requestIdleCallback).requestIdleCallback(()=>setTimeout(()=>{\n                        if (!cancelled) {\n                            reject(err);\n                        }\n                    }, ms)\n                );\n            });\n        }\n        if (false) {}\n    });\n}\nfunction getClientBuildManifest() {\n    if (self.__BUILD_MANIFEST) {\n        return Promise.resolve(self.__BUILD_MANIFEST);\n    }\n    const onBuildManifest = new Promise((resolve)=>{\n        // Mandatory because this is not concurrent safe:\n        const cb = self.__BUILD_MANIFEST_CB;\n        self.__BUILD_MANIFEST_CB = ()=>{\n            resolve(self.__BUILD_MANIFEST);\n            cb && cb();\n        };\n    });\n    return resolvePromiseWithTimeout(onBuildManifest, MS_MAX_IDLE_DELAY, markAssetError(new Error('Failed to load client build manifest')));\n}\nfunction getMiddlewareManifest() {\n    if (self.__MIDDLEWARE_MANIFEST) {\n        return Promise.resolve(self.__MIDDLEWARE_MANIFEST);\n    }\n    const onMiddlewareManifest = new Promise((resolve)=>{\n        const cb = self.__MIDDLEWARE_MANIFEST_CB;\n        self.__MIDDLEWARE_MANIFEST_CB = ()=>{\n            resolve(self.__MIDDLEWARE_MANIFEST);\n            cb && cb();\n        };\n    });\n    return resolvePromiseWithTimeout(onMiddlewareManifest, MS_MAX_IDLE_DELAY, markAssetError(new Error('Failed to load client middleware manifest')));\n}\nfunction getFilesForRoute(assetPrefix, route) {\n    if (true) {\n        return Promise.resolve({\n            scripts: [\n                assetPrefix + '/_next/static/chunks/pages' + encodeURI((0, _getAssetPathFromRoute).default(route, '.js')), \n            ],\n            // Styles are handled by `style-loader` in development:\n            css: []\n        });\n    }\n    return getClientBuildManifest().then((manifest)=>{\n        if (!(route in manifest)) {\n            throw markAssetError(new Error(`Failed to lookup route: ${route}`));\n        }\n        const allFiles = manifest[route].map((entry)=>assetPrefix + '/_next/' + encodeURI(entry)\n        );\n        return {\n            scripts: allFiles.filter((v)=>v.endsWith('.js')\n            ),\n            css: allFiles.filter((v)=>v.endsWith('.css')\n            )\n        };\n    });\n}\nfunction createRouteLoader(assetPrefix) {\n    const entrypoints = new Map();\n    const loadedScripts = new Map();\n    const styleSheets = new Map();\n    const routes = new Map();\n    function maybeExecuteScript(src) {\n        // With HMR we might need to \"reload\" scripts when they are\n        // disposed and readded. Executing scripts twice has no functional\n        // differences\n        if (false) {} else {\n            return appendScript(src);\n        }\n    }\n    function fetchStyleSheet(href) {\n        let prom = styleSheets.get(href);\n        if (prom) {\n            return prom;\n        }\n        styleSheets.set(href, prom = fetch(href).then((res)=>{\n            if (!res.ok) {\n                throw new Error(`Failed to load stylesheet: ${href}`);\n            }\n            return res.text().then((text)=>({\n                    href: href,\n                    content: text\n                })\n            );\n        }).catch((err)=>{\n            throw markAssetError(err);\n        }));\n        return prom;\n    }\n    return {\n        whenEntrypoint (route) {\n            return withFuture(route, entrypoints);\n        },\n        onEntrypoint (route1, execute) {\n            (execute ? Promise.resolve().then(()=>execute()\n            ).then((exports)=>({\n                    component: exports && exports.default || exports,\n                    exports: exports\n                })\n            , (err)=>({\n                    error: err\n                })\n            ) : Promise.resolve(undefined)).then((input)=>{\n                const old = entrypoints.get(route1);\n                if (old && 'resolve' in old) {\n                    if (input) {\n                        entrypoints.set(route1, input);\n                        old.resolve(input);\n                    }\n                } else {\n                    if (input) {\n                        entrypoints.set(route1, input);\n                    } else {\n                        entrypoints.delete(route1);\n                    }\n                    // when this entrypoint has been resolved before\n                    // the route is outdated and we want to invalidate\n                    // this cache entry\n                    routes.delete(route1);\n                }\n            });\n        },\n        loadRoute (route2, prefetch) {\n            return withFuture(route2, routes, ()=>{\n                const routeFilesPromise = getFilesForRoute(assetPrefix, route2).then(({ scripts , css  })=>{\n                    return Promise.all([\n                        entrypoints.has(route2) ? [] : Promise.all(scripts.map(maybeExecuteScript)),\n                        Promise.all(css.map(fetchStyleSheet)), \n                    ]);\n                }).then((res)=>{\n                    return this.whenEntrypoint(route2).then((entrypoint)=>({\n                            entrypoint,\n                            styles: res[1]\n                        })\n                    );\n                });\n                if (true) {\n                    devBuildPromise = new Promise((resolve)=>{\n                        if (routeFilesPromise) {\n                            return routeFilesPromise.finally(()=>{\n                                resolve();\n                            });\n                        }\n                    });\n                }\n                return resolvePromiseWithTimeout(routeFilesPromise, MS_MAX_IDLE_DELAY, markAssetError(new Error(`Route did not complete loading: ${route2}`))).then(({ entrypoint , styles  })=>{\n                    const res = Object.assign({\n                        styles: styles\n                    }, entrypoint);\n                    return 'error' in entrypoint ? entrypoint : res;\n                }).catch((err)=>{\n                    if (prefetch) {\n                        // we don't want to cache errors during prefetch\n                        throw err;\n                    }\n                    return {\n                        error: err\n                    };\n                });\n            });\n        },\n        prefetch (route3) {\n            // https://github.com/GoogleChromeLabs/quicklink/blob/453a661fa1fa940e2d2e044452398e38c67a98fb/src/index.mjs#L115-L118\n            // License: Apache 2.0\n            let cn;\n            if (cn = navigator.connection) {\n                // Don't prefetch if using 2G or if Save-Data is enabled.\n                if (cn.saveData || /2g/.test(cn.effectiveType)) return Promise.resolve();\n            }\n            return getFilesForRoute(assetPrefix, route3).then((output)=>Promise.all(canPrefetch ? output.scripts.map((script)=>prefetchViaDom(script, 'script')\n                ) : [])\n            ).then(()=>{\n                (0, _requestIdleCallback).requestIdleCallback(()=>this.loadRoute(route3, true).catch(()=>{\n                    })\n                );\n            }).catch(()=>{\n            });\n        }\n    };\n} //# sourceMappingURL=route-loader.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/route-loader.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/router.js":
/*!*************************************************!*\
  !*** ./node_modules/next/dist/client/router.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"Router\", ({\n    enumerable: true,\n    get: function() {\n        return _router.default;\n    }\n}));\nObject.defineProperty(exports, \"withRouter\", ({\n    enumerable: true,\n    get: function() {\n        return _withRouter.default;\n    }\n}));\nexports.useRouter = useRouter;\nexports.createRouter = createRouter;\nexports.makePublicRouterInstance = makePublicRouterInstance;\nexports[\"default\"] = void 0;\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"react\"));\nvar _router = _interopRequireDefault(__webpack_require__(/*! ../shared/lib/router/router */ \"./node_modules/next/dist/shared/lib/router/router.js\"));\nvar _routerContext = __webpack_require__(/*! ../shared/lib/router-context */ \"../shared/lib/router-context\");\nvar _isError = _interopRequireDefault(__webpack_require__(/*! ../lib/is-error */ \"./node_modules/next/dist/lib/is-error.js\"));\nvar _withRouter = _interopRequireDefault(__webpack_require__(/*! ./with-router */ \"./node_modules/next/dist/client/with-router.js\"));\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nconst singletonRouter = {\n    router: null,\n    readyCallbacks: [],\n    ready (cb1) {\n        if (this.router) return cb1();\n        if (false) {}\n    }\n};\n// Create public properties and methods of the router in the singletonRouter\nconst urlPropertyFields = [\n    'pathname',\n    'route',\n    'query',\n    'asPath',\n    'components',\n    'isFallback',\n    'basePath',\n    'locale',\n    'locales',\n    'defaultLocale',\n    'isReady',\n    'isPreview',\n    'isLocaleDomain',\n    'domainLocales', \n];\nconst routerEvents = [\n    'routeChangeStart',\n    'beforeHistoryChange',\n    'routeChangeComplete',\n    'routeChangeError',\n    'hashChangeStart',\n    'hashChangeComplete', \n];\nconst coreMethodFields = [\n    'push',\n    'replace',\n    'reload',\n    'back',\n    'prefetch',\n    'beforePopState', \n];\n// Events is a static property on the router, the router doesn't have to be initialized to use it\nObject.defineProperty(singletonRouter, 'events', {\n    get () {\n        return _router.default.events;\n    }\n});\nurlPropertyFields.forEach((field)=>{\n    // Here we need to use Object.defineProperty because we need to return\n    // the property assigned to the actual router\n    // The value might get changed as we change routes and this is the\n    // proper way to access it\n    Object.defineProperty(singletonRouter, field, {\n        get () {\n            const router = getRouter();\n            return router[field];\n        }\n    });\n});\ncoreMethodFields.forEach((field)=>{\n    singletonRouter[field] = (...args)=>{\n        const router = getRouter();\n        return router[field](...args);\n    };\n});\nrouterEvents.forEach((event)=>{\n    singletonRouter.ready(()=>{\n        _router.default.events.on(event, (...args)=>{\n            const eventField = `on${event.charAt(0).toUpperCase()}${event.substring(1)}`;\n            const _singletonRouter = singletonRouter;\n            if (_singletonRouter[eventField]) {\n                try {\n                    _singletonRouter[eventField](...args);\n                } catch (err) {\n                    console.error(`Error when running the Router event: ${eventField}`);\n                    console.error((0, _isError).default(err) ? `${err.message}\\n${err.stack}` : err + '');\n                }\n            }\n        });\n    });\n});\nfunction getRouter() {\n    if (!singletonRouter.router) {\n        const message = 'No router instance found.\\n' + 'You should only use \"next/router\" on the client side of your app.\\n';\n        throw new Error(message);\n    }\n    return singletonRouter.router;\n}\nvar _default = singletonRouter;\nexports[\"default\"] = _default;\nfunction useRouter() {\n    return _react.default.useContext(_routerContext.RouterContext);\n}\nfunction createRouter(...args) {\n    singletonRouter.router = new _router.default(...args);\n    singletonRouter.readyCallbacks.forEach((cb)=>cb()\n    );\n    singletonRouter.readyCallbacks = [];\n    return singletonRouter.router;\n}\nfunction makePublicRouterInstance(router) {\n    const scopedRouter = router;\n    const instance = {\n    };\n    for (const property of urlPropertyFields){\n        if (typeof scopedRouter[property] === 'object') {\n            instance[property] = Object.assign(Array.isArray(scopedRouter[property]) ? [] : {\n            }, scopedRouter[property]) // makes sure query is not stateful\n            ;\n            continue;\n        }\n        instance[property] = scopedRouter[property];\n    }\n    // Events is a static property on the router, the router doesn't have to be initialized to use it\n    instance.events = _router.default.events;\n    coreMethodFields.forEach((field)=>{\n        instance[field] = (...args)=>{\n            return scopedRouter[field](...args);\n        };\n    });\n    return instance;\n} //# sourceMappingURL=router.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/router.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/with-router.js":
/*!******************************************************!*\
  !*** ./node_modules/next/dist/client/with-router.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = withRouter;\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"react\"));\nvar _router = __webpack_require__(/*! ./router */ \"./node_modules/next/dist/client/router.js\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction withRouter(ComposedComponent) {\n    function WithRouterWrapper(props) {\n        return(/*#__PURE__*/ _react.default.createElement(ComposedComponent, Object.assign({\n            router: (0, _router).useRouter()\n        }, props)));\n    }\n    WithRouterWrapper.getInitialProps = ComposedComponent.getInitialProps;\n    WithRouterWrapper.origGetInitialProps = ComposedComponent.origGetInitialProps;\n    if (true) {\n        const name = ComposedComponent.displayName || ComposedComponent.name || 'Unknown';\n        WithRouterWrapper.displayName = `withRouter(${name})`;\n    }\n    return WithRouterWrapper;\n} //# sourceMappingURL=with-router.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC93aXRoLXJvdXRlci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBWTtBQUNaQSw4Q0FBNkMsQ0FBQztJQUMxQ0csS0FBSyxFQUFFLElBQUk7QUFDZixDQUFDLEVBQUM7QUFDRkQsa0JBQWUsR0FBR0csVUFBVTtBQUM1QixHQUFHLENBQUNDLE1BQU0sR0FBR0Msc0JBQXNCLENBQUNDLG1CQUFPLENBQUMsb0JBQU87QUFDbkQsR0FBRyxDQUFDQyxPQUFPLEdBQUdELG1CQUFPLENBQUMsMkRBQVU7U0FDdkJELHNCQUFzQixDQUFDRyxHQUFHLEVBQUUsQ0FBQztJQUNsQyxNQUFNLENBQUNBLEdBQUcsSUFBSUEsR0FBRyxDQUFDQyxVQUFVLEdBQUdELEdBQUcsR0FBRyxDQUFDO1FBQ2xDTixPQUFPLEVBQUVNLEdBQUc7SUFDaEIsQ0FBQztBQUNMLENBQUM7U0FDUUwsVUFBVSxDQUFDTyxpQkFBaUIsRUFBRSxDQUFDO2FBQzNCQyxpQkFBaUIsQ0FBQ0MsS0FBSyxFQUFFLENBQUM7UUFDL0IsTUFBTSxDQUFDLEVBQWEsWUFBQ1IsTUFBTSxDQUFDRixPQUFPLENBQUNXLGFBQWEsQ0FBQ0gsaUJBQWlCLEVBQUVaLE1BQU0sQ0FBQ2dCLE1BQU0sQ0FBQyxDQUFDO1lBQ2hGQyxNQUFNLEdBQUcsQ0FBQyxFQUFFUixPQUFPLEVBQUVTLFNBQVM7UUFDbEMsQ0FBQyxFQUFFSixLQUFLO0lBQ1osQ0FBQztJQUNERCxpQkFBaUIsQ0FBQ00sZUFBZSxHQUFHUCxpQkFBaUIsQ0FBQ08sZUFBZTtJQUNyRU4saUJBQWlCLENBQUNPLG1CQUFtQixHQUFHUixpQkFBaUIsQ0FBQ1EsbUJBQW1CO0lBQzdFLEVBQUUsRUFwQk4sSUFvQjZDLEVBQUUsQ0FBQztRQUN4QyxLQUFLLENBQUNDLElBQUksR0FBR1QsaUJBQWlCLENBQUNVLFdBQVcsSUFBSVYsaUJBQWlCLENBQUNTLElBQUksSUFBSSxDQUFTO1FBQ2pGUixpQkFBaUIsQ0FBQ1MsV0FBVyxJQUFJLFdBQVcsRUFBRUQsSUFBSSxDQUFDLENBQUM7SUFDeEQsQ0FBQztJQUNELE1BQU0sQ0FBQ1IsaUJBQWlCO0FBQzVCLENBQUMsQ0FFc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGljay1iYXR0bGUtbmV4dC8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L3dpdGgtcm91dGVyLmpzP2FjN2MiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB3aXRoUm91dGVyO1xudmFyIF9yZWFjdCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcInJlYWN0XCIpKTtcbnZhciBfcm91dGVyID0gcmVxdWlyZShcIi4vcm91dGVyXCIpO1xuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDoge1xuICAgICAgICBkZWZhdWx0OiBvYmpcbiAgICB9O1xufVxuZnVuY3Rpb24gd2l0aFJvdXRlcihDb21wb3NlZENvbXBvbmVudCkge1xuICAgIGZ1bmN0aW9uIFdpdGhSb3V0ZXJXcmFwcGVyKHByb3BzKSB7XG4gICAgICAgIHJldHVybigvKiNfX1BVUkVfXyovIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoQ29tcG9zZWRDb21wb25lbnQsIE9iamVjdC5hc3NpZ24oe1xuICAgICAgICAgICAgcm91dGVyOiAoMCwgX3JvdXRlcikudXNlUm91dGVyKClcbiAgICAgICAgfSwgcHJvcHMpKSk7XG4gICAgfVxuICAgIFdpdGhSb3V0ZXJXcmFwcGVyLmdldEluaXRpYWxQcm9wcyA9IENvbXBvc2VkQ29tcG9uZW50LmdldEluaXRpYWxQcm9wcztcbiAgICBXaXRoUm91dGVyV3JhcHBlci5vcmlnR2V0SW5pdGlhbFByb3BzID0gQ29tcG9zZWRDb21wb25lbnQub3JpZ0dldEluaXRpYWxQcm9wcztcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICBjb25zdCBuYW1lID0gQ29tcG9zZWRDb21wb25lbnQuZGlzcGxheU5hbWUgfHwgQ29tcG9zZWRDb21wb25lbnQubmFtZSB8fCAnVW5rbm93bic7XG4gICAgICAgIFdpdGhSb3V0ZXJXcmFwcGVyLmRpc3BsYXlOYW1lID0gYHdpdGhSb3V0ZXIoJHtuYW1lfSlgO1xuICAgIH1cbiAgICByZXR1cm4gV2l0aFJvdXRlcldyYXBwZXI7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdpdGgtcm91dGVyLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJ3aXRoUm91dGVyIiwiX3JlYWN0IiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfcm91dGVyIiwib2JqIiwiX19lc01vZHVsZSIsIkNvbXBvc2VkQ29tcG9uZW50IiwiV2l0aFJvdXRlcldyYXBwZXIiLCJwcm9wcyIsImNyZWF0ZUVsZW1lbnQiLCJhc3NpZ24iLCJyb3V0ZXIiLCJ1c2VSb3V0ZXIiLCJnZXRJbml0aWFsUHJvcHMiLCJvcmlnR2V0SW5pdGlhbFByb3BzIiwibmFtZSIsImRpc3BsYXlOYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/with-router.js\n");

/***/ }),

/***/ "./node_modules/next/dist/shared/lib/router/router.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/router.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getDomainLocale = getDomainLocale;\nexports.addLocale = addLocale;\nexports.delLocale = delLocale;\nexports.hasBasePath = hasBasePath;\nexports.addBasePath = addBasePath;\nexports.delBasePath = delBasePath;\nexports.isLocalURL = isLocalURL;\nexports.interpolateAs = interpolateAs;\nexports.resolveHref = resolveHref;\nexports[\"default\"] = void 0;\nvar _normalizeTrailingSlash = __webpack_require__(/*! ../../../client/normalize-trailing-slash */ \"./node_modules/next/dist/client/normalize-trailing-slash.js\");\nvar _routeLoader = __webpack_require__(/*! ../../../client/route-loader */ \"./node_modules/next/dist/client/route-loader.js\");\nvar _isError = _interopRequireDefault(__webpack_require__(/*! ../../../lib/is-error */ \"./node_modules/next/dist/lib/is-error.js\"));\nvar _denormalizePagePath = __webpack_require__(/*! ../../../server/denormalize-page-path */ \"../../../server/denormalize-page-path\");\nvar _normalizeLocalePath = __webpack_require__(/*! ../i18n/normalize-locale-path */ \"../i18n/normalize-locale-path\");\nvar _mitt = _interopRequireDefault(__webpack_require__(/*! ../mitt */ \"../mitt\"));\nvar _utils = __webpack_require__(/*! ../utils */ \"../shared/lib/utils\");\nvar _isDynamic = __webpack_require__(/*! ./utils/is-dynamic */ \"./utils/is-dynamic\");\nvar _parseRelativeUrl = __webpack_require__(/*! ./utils/parse-relative-url */ \"./utils/parse-relative-url\");\nvar _querystring = __webpack_require__(/*! ./utils/querystring */ \"./utils/querystring\");\nvar _resolveRewrites = _interopRequireDefault(__webpack_require__(/*! ./utils/resolve-rewrites */ \"./utils/resolve-rewrites\"));\nvar _routeMatcher = __webpack_require__(/*! ./utils/route-matcher */ \"./utils/route-matcher\");\nvar _routeRegex = __webpack_require__(/*! ./utils/route-regex */ \"./utils/route-regex\");\nvar _getMiddlewareRegex = __webpack_require__(/*! ./utils/get-middleware-regex */ \"./utils/get-middleware-regex\");\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nlet detectDomainLocale;\nif (false) {}\nconst basePath =  false || '';\nfunction buildCancellationError() {\n    return Object.assign(new Error('Route Cancelled'), {\n        cancelled: true\n    });\n}\nfunction addPathPrefix(path, prefix) {\n    if (!path.startsWith('/') || !prefix) {\n        return path;\n    }\n    const pathname = pathNoQueryHash(path);\n    return (0, _normalizeTrailingSlash).normalizePathTrailingSlash(`${prefix}${pathname}`) + path.substr(pathname.length);\n}\nfunction getDomainLocale(path, locale, locales, domainLocales) {\n    if (false) {} else {\n        return false;\n    }\n}\nfunction addLocale(path, locale, defaultLocale) {\n    if (false) {}\n    return path;\n}\nfunction delLocale(path, locale) {\n    if (false) {}\n    return path;\n}\nfunction pathNoQueryHash(path) {\n    const queryIndex = path.indexOf('?');\n    const hashIndex = path.indexOf('#');\n    if (queryIndex > -1 || hashIndex > -1) {\n        path = path.substring(0, queryIndex > -1 ? queryIndex : hashIndex);\n    }\n    return path;\n}\nfunction hasBasePath(path) {\n    path = pathNoQueryHash(path);\n    return path === basePath || path.startsWith(basePath + '/');\n}\nfunction addBasePath(path) {\n    // we only add the basepath on relative urls\n    return addPathPrefix(path, basePath);\n}\nfunction delBasePath(path) {\n    path = path.slice(basePath.length);\n    if (!path.startsWith('/')) path = `/${path}`;\n    return path;\n}\nfunction isLocalURL(url) {\n    // prevent a hydration mismatch on href for url with anchor refs\n    if (url.startsWith('/') || url.startsWith('#') || url.startsWith('?')) return true;\n    try {\n        // absolute urls can be local if they are on the same origin\n        const locationOrigin = (0, _utils).getLocationOrigin();\n        const resolved = new URL(url, locationOrigin);\n        return resolved.origin === locationOrigin && hasBasePath(resolved.pathname);\n    } catch (_) {\n        return false;\n    }\n}\nfunction interpolateAs(route, asPathname, query) {\n    let interpolatedRoute = '';\n    const dynamicRegex = (0, _routeRegex).getRouteRegex(route);\n    const dynamicGroups = dynamicRegex.groups;\n    const dynamicMatches = (asPathname !== route ? (0, _routeMatcher).getRouteMatcher(dynamicRegex)(asPathname) : '') || // TODO: should this take priority; also need to change in the router.\n    query;\n    interpolatedRoute = route;\n    const params = Object.keys(dynamicGroups);\n    if (!params.every((param)=>{\n        let value = dynamicMatches[param] || '';\n        const { repeat , optional  } = dynamicGroups[param];\n        // support single-level catch-all\n        // TODO: more robust handling for user-error (passing `/`)\n        let replaced = `[${repeat ? '...' : ''}${param}]`;\n        if (optional) {\n            replaced = `${!value ? '/' : ''}[${replaced}]`;\n        }\n        if (repeat && !Array.isArray(value)) value = [\n            value\n        ];\n        return (optional || param in dynamicMatches) && (interpolatedRoute = interpolatedRoute.replace(replaced, repeat ? value.map(// path delimiter escaped since they are being inserted\n        // into the URL and we expect URL encoded segments\n        // when parsing dynamic route params\n        (segment)=>encodeURIComponent(segment)\n        ).join('/') : encodeURIComponent(value)) || '/');\n    })) {\n        interpolatedRoute = '' // did not satisfy all requirements\n        ;\n    // n.b. We ignore this error because we handle warning for this case in\n    // development in the `<Link>` component directly.\n    }\n    return {\n        params,\n        result: interpolatedRoute\n    };\n}\nfunction omitParmsFromQuery(query, params) {\n    const filteredQuery = {\n    };\n    Object.keys(query).forEach((key)=>{\n        if (!params.includes(key)) {\n            filteredQuery[key] = query[key];\n        }\n    });\n    return filteredQuery;\n}\nfunction resolveHref(router, href, resolveAs) {\n    // we use a dummy base url for relative urls\n    let base;\n    let urlAsString = typeof href === 'string' ? href : (0, _utils).formatWithValidation(href);\n    // repeated slashes and backslashes in the URL are considered\n    // invalid and will never match a Next.js page/file\n    const urlProtoMatch = urlAsString.match(/^[a-zA-Z]{1,}:\\/\\//);\n    const urlAsStringNoProto = urlProtoMatch ? urlAsString.substr(urlProtoMatch[0].length) : urlAsString;\n    const urlParts = urlAsStringNoProto.split('?');\n    if ((urlParts[0] || '').match(/(\\/\\/|\\\\)/)) {\n        console.error(`Invalid href passed to next/router: ${urlAsString}, repeated forward-slashes (//) or backslashes \\\\ are not valid in the href`);\n        const normalizedUrl = (0, _utils).normalizeRepeatedSlashes(urlAsStringNoProto);\n        urlAsString = (urlProtoMatch ? urlProtoMatch[0] : '') + normalizedUrl;\n    }\n    // Return because it cannot be routed by the Next.js router\n    if (!isLocalURL(urlAsString)) {\n        return resolveAs ? [\n            urlAsString\n        ] : urlAsString;\n    }\n    try {\n        base = new URL(urlAsString.startsWith('#') ? router.asPath : router.pathname, 'http://n');\n    } catch (_) {\n        // fallback to / for invalid asPath values e.g. //\n        base = new URL('/', 'http://n');\n    }\n    try {\n        const finalUrl = new URL(urlAsString, base);\n        finalUrl.pathname = (0, _normalizeTrailingSlash).normalizePathTrailingSlash(finalUrl.pathname);\n        let interpolatedAs = '';\n        if ((0, _isDynamic).isDynamicRoute(finalUrl.pathname) && finalUrl.searchParams && resolveAs) {\n            const query = (0, _querystring).searchParamsToUrlQuery(finalUrl.searchParams);\n            const { result , params  } = interpolateAs(finalUrl.pathname, finalUrl.pathname, query);\n            if (result) {\n                interpolatedAs = (0, _utils).formatWithValidation({\n                    pathname: result,\n                    hash: finalUrl.hash,\n                    query: omitParmsFromQuery(query, params)\n                });\n            }\n        }\n        // if the origin didn't change, it means we received a relative href\n        const resolvedHref = finalUrl.origin === base.origin ? finalUrl.href.slice(finalUrl.origin.length) : finalUrl.href;\n        return resolveAs ? [\n            resolvedHref,\n            interpolatedAs || resolvedHref\n        ] : resolvedHref;\n    } catch (_1) {\n        return resolveAs ? [\n            urlAsString\n        ] : urlAsString;\n    }\n}\nfunction stripOrigin(url) {\n    const origin = (0, _utils).getLocationOrigin();\n    return url.startsWith(origin) ? url.substring(origin.length) : url;\n}\nfunction prepareUrlAs(router, url, as) {\n    // If url and as provided as an object representation,\n    // we'll format them into the string version here.\n    let [resolvedHref, resolvedAs] = resolveHref(router, url, true);\n    const origin = (0, _utils).getLocationOrigin();\n    const hrefHadOrigin = resolvedHref.startsWith(origin);\n    const asHadOrigin = resolvedAs && resolvedAs.startsWith(origin);\n    resolvedHref = stripOrigin(resolvedHref);\n    resolvedAs = resolvedAs ? stripOrigin(resolvedAs) : resolvedAs;\n    const preparedUrl = hrefHadOrigin ? resolvedHref : addBasePath(resolvedHref);\n    const preparedAs = as ? stripOrigin(resolveHref(router, as)) : resolvedAs || resolvedHref;\n    return {\n        url: preparedUrl,\n        as: asHadOrigin ? preparedAs : addBasePath(preparedAs)\n    };\n}\nfunction resolveDynamicRoute(pathname, pages) {\n    const cleanPathname = (0, _normalizeTrailingSlash).removePathTrailingSlash((0, _denormalizePagePath).denormalizePagePath(pathname));\n    if (cleanPathname === '/404' || cleanPathname === '/_error') {\n        return pathname;\n    }\n    // handle resolving href for dynamic routes\n    if (!pages.includes(cleanPathname)) {\n        // eslint-disable-next-line array-callback-return\n        pages.some((page)=>{\n            if ((0, _isDynamic).isDynamicRoute(page) && (0, _routeRegex).getRouteRegex(page).re.test(cleanPathname)) {\n                pathname = page;\n                return true;\n            }\n        });\n    }\n    return (0, _normalizeTrailingSlash).removePathTrailingSlash(pathname);\n}\nconst manualScrollRestoration =  false && 0;\nconst SSG_DATA_NOT_FOUND = Symbol('SSG_DATA_NOT_FOUND');\nfunction fetchRetry(url, attempts) {\n    return fetch(url, {\n        // Cookies are required to be present for Next.js' SSG \"Preview Mode\".\n        // Cookies may also be required for `getServerSideProps`.\n        //\n        // > `fetch` wonât send cookies, unless you set the credentials init\n        // > option.\n        // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n        //\n        // > For maximum browser compatibility when it comes to sending &\n        // > receiving cookies, always supply the `credentials: 'same-origin'`\n        // > option instead of relying on the default.\n        // https://github.com/github/fetch#caveats\n        credentials: 'same-origin'\n    }).then((res)=>{\n        if (!res.ok) {\n            if (attempts > 1 && res.status >= 500) {\n                return fetchRetry(url, attempts - 1);\n            }\n            if (res.status === 404) {\n                return res.json().then((data)=>{\n                    if (data.notFound) {\n                        return {\n                            notFound: SSG_DATA_NOT_FOUND\n                        };\n                    }\n                    throw new Error(`Failed to load static props`);\n                });\n            }\n            throw new Error(`Failed to load static props`);\n        }\n        return res.json();\n    });\n}\nfunction fetchNextData(dataHref, isServerRender, inflightCache, persistCache) {\n    const { href: cacheKey  } = new URL(dataHref, window.location.href);\n    if (inflightCache[cacheKey] !== undefined) {\n        return inflightCache[cacheKey];\n    }\n    return inflightCache[cacheKey] = fetchRetry(dataHref, isServerRender ? 3 : 1).catch((err)=>{\n        // We should only trigger a server-side transition if this was caused\n        // on a client-side transition. Otherwise, we'd get into an infinite\n        // loop.\n        if (!isServerRender) {\n            (0, _routeLoader).markAssetError(err);\n        }\n        throw err;\n    }).then((data)=>{\n        if (!persistCache || 'development' !== 'production') {\n            delete inflightCache[cacheKey];\n        }\n        return data;\n    }).catch((err)=>{\n        delete inflightCache[cacheKey];\n        throw err;\n    });\n}\nclass Router {\n    constructor(pathname1, query1, as1, { initialProps , pageLoader , App , wrapApp , Component , err: err2 , subscription , isFallback , locale , locales , defaultLocale , domainLocales , isPreview  }){\n        // Static Data Cache\n        this.sdc = {\n        };\n        // In-flight Server Data Requests, for deduping\n        this.sdr = {\n        };\n        // In-flight middleware preflight requests\n        this.sde = {\n        };\n        this._idx = 0;\n        this.onPopState = (e)=>{\n            const state = e.state;\n            if (!state) {\n                // We get state as undefined for two reasons.\n                //  1. With older safari (< 8) and older chrome (< 34)\n                //  2. When the URL changed with #\n                //\n                // In the both cases, we don't need to proceed and change the route.\n                // (as it's already changed)\n                // But we can simply replace the state with the new changes.\n                // Actually, for (1) we don't need to nothing. But it's hard to detect that event.\n                // So, doing the following for (1) does no harm.\n                const { pathname , query  } = this;\n                this.changeState('replaceState', (0, _utils).formatWithValidation({\n                    pathname: addBasePath(pathname),\n                    query\n                }), (0, _utils).getURL());\n                return;\n            }\n            if (!state.__N) {\n                return;\n            }\n            let forcedScroll;\n            const { url , as , options , idx  } = state;\n            if (false) {}\n            this._idx = idx;\n            const { pathname  } = (0, _parseRelativeUrl).parseRelativeUrl(url);\n            // Make sure we don't re-render on initial load,\n            // can be caused by navigating back from an external site\n            if (this.isSsr && as === this.asPath && pathname === this.pathname) {\n                return;\n            }\n            // If the downstream application returns falsy, return.\n            // They will then be responsible for handling the event.\n            if (this._bps && !this._bps(state)) {\n                return;\n            }\n            this.change('replaceState', url, as, Object.assign({\n            }, options, {\n                shallow: options.shallow && this._shallow,\n                locale: options.locale || this.defaultLocale\n            }), forcedScroll);\n        };\n        // represents the current component key\n        this.route = (0, _normalizeTrailingSlash).removePathTrailingSlash(pathname1);\n        // set up the component cache (by route keys)\n        this.components = {\n        };\n        // We should not keep the cache, if there's an error\n        // Otherwise, this cause issues when when going back and\n        // come again to the errored page.\n        if (pathname1 !== '/_error') {\n            this.components[this.route] = {\n                Component,\n                initial: true,\n                props: initialProps,\n                err: err2,\n                __N_SSG: initialProps && initialProps.__N_SSG,\n                __N_SSP: initialProps && initialProps.__N_SSP\n            };\n        }\n        this.components['/_app'] = {\n            Component: App,\n            styleSheets: []\n        };\n        // Backwards compat for Router.router.events\n        // TODO: Should be remove the following major version as it was never documented\n        this.events = Router.events;\n        this.pageLoader = pageLoader;\n        this.pathname = pathname1;\n        this.query = query1;\n        // if auto prerendered and dynamic route wait to update asPath\n        // until after mount to prevent hydration mismatch\n        const autoExportDynamic = (0, _isDynamic).isDynamicRoute(pathname1) && self.__NEXT_DATA__.autoExport;\n        this.asPath = autoExportDynamic ? pathname1 : as1;\n        this.basePath = basePath;\n        this.sub = subscription;\n        this.clc = null;\n        this._wrapApp = wrapApp;\n        // make sure to ignore extra popState in safari on navigating\n        // back from external site\n        this.isSsr = true;\n        this.isFallback = isFallback;\n        this.isReady = !!(self.__NEXT_DATA__.gssp || self.__NEXT_DATA__.gip || self.__NEXT_DATA__.appGip && !self.__NEXT_DATA__.gsp || !autoExportDynamic && !self.location.search && !false);\n        this.isPreview = !!isPreview;\n        this.isLocaleDomain = false;\n        if (false) {}\n        if (false) {}\n    }\n    reload() {\n        window.location.reload();\n    }\n    /**\n   * Go back in history\n   */ back() {\n        window.history.back();\n    }\n    /**\n   * Performs a `pushState` with arguments\n   * @param url of the route\n   * @param as masks `url` for the browser\n   * @param options object you can define `shallow` and other options\n   */ push(url, as, options = {\n    }) {\n        if (false) {}\n        ({ url , as  } = prepareUrlAs(this, url, as));\n        return this.change('pushState', url, as, options);\n    }\n    /**\n   * Performs a `replaceState` with arguments\n   * @param url of the route\n   * @param as masks `url` for the browser\n   * @param options object you can define `shallow` and other options\n   */ replace(url1, as2, options1 = {\n    }) {\n        ({ url: url1 , as: as2  } = prepareUrlAs(this, url1, as2));\n        return this.change('replaceState', url1, as2, options1);\n    }\n    async change(method, url2, as3, options2, forcedScroll) {\n        if (!isLocalURL(url2)) {\n            window.location.href = url2;\n            return false;\n        }\n        const shouldResolveHref = options2._h || options2._shouldResolveHref || pathNoQueryHash(url2) === pathNoQueryHash(as3);\n        // for static pages with query params in the URL we delay\n        // marking the router ready until after the query is updated\n        if (options2._h) {\n            this.isReady = true;\n        }\n        const prevLocale = this.locale;\n        if (false) { var ref; }\n        if (!options2._h) {\n            this.isSsr = false;\n        }\n        // marking route changes as a navigation start entry\n        if (_utils.ST) {\n            performance.mark('routeChange');\n        }\n        const { shallow =false  } = options2;\n        const routeProps = {\n            shallow\n        };\n        if (this._inFlightRoute) {\n            this.abortComponentLoad(this._inFlightRoute, routeProps);\n        }\n        as3 = addBasePath(addLocale(hasBasePath(as3) ? delBasePath(as3) : as3, options2.locale, this.defaultLocale));\n        const cleanedAs = delLocale(hasBasePath(as3) ? delBasePath(as3) : as3, this.locale);\n        this._inFlightRoute = as3;\n        let localeChange = prevLocale !== this.locale;\n        // If the url change is only related to a hash change\n        // We should not proceed. We should only change the state.\n        // WARNING: `_h` is an internal option for handing Next.js client-side\n        // hydration. Your app should _never_ use this property. It may change at\n        // any time without notice.\n        if (!options2._h && this.onlyAHashChange(cleanedAs) && !localeChange) {\n            this.asPath = cleanedAs;\n            Router.events.emit('hashChangeStart', as3, routeProps);\n            // TODO: do we need the resolved href when only a hash change?\n            this.changeState(method, url2, as3, options2);\n            this.scrollToHash(cleanedAs);\n            this.notify(this.components[this.route], null);\n            Router.events.emit('hashChangeComplete', as3, routeProps);\n            return true;\n        }\n        let parsed = (0, _parseRelativeUrl).parseRelativeUrl(url2);\n        let { pathname , query  } = parsed;\n        // The build manifest needs to be loaded before auto-static dynamic pages\n        // get their query parameters to allow ensuring they can be parsed properly\n        // when rewritten to\n        let pages, rewrites;\n        try {\n            [pages, { __rewrites: rewrites  }] = await Promise.all([\n                this.pageLoader.getPageList(),\n                (0, _routeLoader).getClientBuildManifest(),\n                this.pageLoader.getMiddlewareList(), \n            ]);\n        } catch (err) {\n            // If we fail to resolve the page list or client-build manifest, we must\n            // do a server-side transition:\n            window.location.href = as3;\n            return false;\n        }\n        // If asked to change the current URL we should reload the current page\n        // (not location.reload() but reload getInitialProps and other Next.js stuffs)\n        // We also need to set the method = replaceState always\n        // as this should not go into the history (That's how browsers work)\n        // We should compare the new asPath to the current asPath, not the url\n        if (!this.urlIsNew(cleanedAs) && !localeChange) {\n            method = 'replaceState';\n        }\n        // we need to resolve the as value using rewrites for dynamic SSG\n        // pages to allow building the data URL correctly\n        let resolvedAs = as3;\n        // url and as should always be prefixed with basePath by this\n        // point by either next/link or router.push/replace so strip the\n        // basePath from the pathname to match the pages dir 1-to-1\n        pathname = pathname ? (0, _normalizeTrailingSlash).removePathTrailingSlash(delBasePath(pathname)) : pathname;\n        if (shouldResolveHref && pathname !== '/_error') {\n            options2._shouldResolveHref = true;\n            if (false) {} else {\n                parsed.pathname = resolveDynamicRoute(pathname, pages);\n                if (parsed.pathname !== pathname) {\n                    pathname = parsed.pathname;\n                    parsed.pathname = addBasePath(pathname);\n                    url2 = (0, _utils).formatWithValidation(parsed);\n                }\n            }\n        }\n        if (!isLocalURL(as3)) {\n            if (true) {\n                throw new Error(`Invalid href: \"${url2}\" and as: \"${as3}\", received relative href and external as` + `\\nSee more info: https://nextjs.org/docs/messages/invalid-relative-url-external-as`);\n            }\n            window.location.href = as3;\n            return false;\n        }\n        resolvedAs = delLocale(delBasePath(resolvedAs), this.locale);\n        const effect = await this._preflightRequest({\n            as: as3,\n            cache: 'development' === 'production',\n            pages,\n            pathname,\n            query\n        });\n        if (effect.type === 'rewrite') {\n            query = {\n                ...query,\n                ...effect.parsedAs.query\n            };\n            resolvedAs = effect.asPath;\n            pathname = effect.resolvedHref;\n            parsed.pathname = effect.resolvedHref;\n            url2 = (0, _utils).formatWithValidation(parsed);\n        } else if (effect.type === 'redirect' && effect.newAs) {\n            return this.change(method, effect.newUrl, effect.newAs, options2);\n        } else if (effect.type === 'redirect' && effect.destination) {\n            window.location.href = effect.destination;\n            return new Promise(()=>{\n            });\n        } else if (effect.type === 'refresh') {\n            window.location.href = as3;\n            return new Promise(()=>{\n            });\n        }\n        const route = (0, _normalizeTrailingSlash).removePathTrailingSlash(pathname);\n        if ((0, _isDynamic).isDynamicRoute(route)) {\n            const parsedAs = (0, _parseRelativeUrl).parseRelativeUrl(resolvedAs);\n            const asPathname = parsedAs.pathname;\n            const routeRegex = (0, _routeRegex).getRouteRegex(route);\n            const routeMatch = (0, _routeMatcher).getRouteMatcher(routeRegex)(asPathname);\n            const shouldInterpolate = route === asPathname;\n            const interpolatedAs = shouldInterpolate ? interpolateAs(route, asPathname, query) : {\n            };\n            if (!routeMatch || shouldInterpolate && !interpolatedAs.result) {\n                const missingParams = Object.keys(routeRegex.groups).filter((param)=>!query[param]\n                );\n                if (missingParams.length > 0) {\n                    if (true) {\n                        console.warn(`${shouldInterpolate ? `Interpolating href` : `Mismatching \\`as\\` and \\`href\\``} failed to manually provide ` + `the params: ${missingParams.join(', ')} in the \\`href\\`'s \\`query\\``);\n                    }\n                    throw new Error((shouldInterpolate ? `The provided \\`href\\` (${url2}) value is missing query values (${missingParams.join(', ')}) to be interpolated properly. ` : `The provided \\`as\\` value (${asPathname}) is incompatible with the \\`href\\` value (${route}). `) + `Read more: https://nextjs.org/docs/messages/${shouldInterpolate ? 'href-interpolation-failed' : 'incompatible-href-as'}`);\n                }\n            } else if (shouldInterpolate) {\n                as3 = (0, _utils).formatWithValidation(Object.assign({\n                }, parsedAs, {\n                    pathname: interpolatedAs.result,\n                    query: omitParmsFromQuery(query, interpolatedAs.params)\n                }));\n            } else {\n                // Merge params into `query`, overwriting any specified in search\n                Object.assign(query, routeMatch);\n            }\n        }\n        Router.events.emit('routeChangeStart', as3, routeProps);\n        try {\n            var ref, ref1;\n            let routeInfo = await this.getRouteInfo(route, pathname, query, as3, resolvedAs, routeProps);\n            let { error , props , __N_SSG , __N_SSP  } = routeInfo;\n            // handle redirect on client-transition\n            if ((__N_SSG || __N_SSP) && props) {\n                if (props.pageProps && props.pageProps.__N_REDIRECT) {\n                    const destination = props.pageProps.__N_REDIRECT;\n                    // check if destination is internal (resolves to a page) and attempt\n                    // client-navigation if it is falling back to hard navigation if\n                    // it's not\n                    if (destination.startsWith('/') && props.pageProps.__N_REDIRECT_BASE_PATH !== false) {\n                        const parsedHref = (0, _parseRelativeUrl).parseRelativeUrl(destination);\n                        parsedHref.pathname = resolveDynamicRoute(parsedHref.pathname, pages);\n                        const { url: newUrl , as: newAs  } = prepareUrlAs(this, destination, destination);\n                        return this.change(method, newUrl, newAs, options2);\n                    }\n                    window.location.href = destination;\n                    return new Promise(()=>{\n                    });\n                }\n                this.isPreview = !!props.__N_PREVIEW;\n                // handle SSG data 404\n                if (props.notFound === SSG_DATA_NOT_FOUND) {\n                    let notFoundRoute;\n                    try {\n                        await this.fetchComponent('/404');\n                        notFoundRoute = '/404';\n                    } catch (_) {\n                        notFoundRoute = '/_error';\n                    }\n                    routeInfo = await this.getRouteInfo(notFoundRoute, notFoundRoute, query, as3, resolvedAs, {\n                        shallow: false\n                    });\n                }\n            }\n            Router.events.emit('beforeHistoryChange', as3, routeProps);\n            this.changeState(method, url2, as3, options2);\n            if (options2._h && pathname === '/_error' && ((ref = self.__NEXT_DATA__.props) === null || ref === void 0 ? void 0 : (ref1 = ref.pageProps) === null || ref1 === void 0 ? void 0 : ref1.statusCode) === 500 && (props === null || props === void 0 ? void 0 : props.pageProps)) {\n                // ensure statusCode is still correct for static 500 page\n                // when updating query information\n                props.pageProps.statusCode = 500;\n            }\n            // shallow routing is only allowed for same page URL changes.\n            const isValidShallowRoute = options2.shallow && this.route === route;\n            var _scroll;\n            const shouldScroll = (_scroll = options2.scroll) !== null && _scroll !== void 0 ? _scroll : !isValidShallowRoute;\n            const resetScroll = shouldScroll ? {\n                x: 0,\n                y: 0\n            } : null;\n            await this.set(route, pathname, query, cleanedAs, routeInfo, forcedScroll !== null && forcedScroll !== void 0 ? forcedScroll : resetScroll).catch((e)=>{\n                if (e.cancelled) error = error || e;\n                else throw e;\n            });\n            if (error) {\n                Router.events.emit('routeChangeError', error, cleanedAs, routeProps);\n                throw error;\n            }\n            if (false) {}\n            Router.events.emit('routeChangeComplete', as3, routeProps);\n            return true;\n        } catch (err1) {\n            if ((0, _isError).default(err1) && err1.cancelled) {\n                return false;\n            }\n            throw err1;\n        }\n    }\n    changeState(method1, url3, as4, options3 = {\n    }) {\n        if (true) {\n            if (typeof window.history === 'undefined') {\n                console.error(`Warning: window.history is not available.`);\n                return;\n            }\n            if (typeof window.history[method1] === 'undefined') {\n                console.error(`Warning: window.history.${method1} is not available`);\n                return;\n            }\n        }\n        if (method1 !== 'pushState' || (0, _utils).getURL() !== as4) {\n            this._shallow = options3.shallow;\n            window.history[method1]({\n                url: url3,\n                as: as4,\n                options: options3,\n                __N: true,\n                idx: this._idx = method1 !== 'pushState' ? this._idx : this._idx + 1\n            }, // Passing the empty string here should be safe against future changes to the method.\n            // https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState\n            '', as4);\n        }\n    }\n    async handleRouteInfoError(err1, pathname, query, as5, routeProps, loadErrorFail) {\n        if (err1.cancelled) {\n            // bubble up cancellation errors\n            throw err1;\n        }\n        if ((0, _routeLoader).isAssetError(err1) || loadErrorFail) {\n            Router.events.emit('routeChangeError', err1, as5, routeProps);\n            // If we can't load the page it could be one of following reasons\n            //  1. Page doesn't exists\n            //  2. Page does exist in a different zone\n            //  3. Internal error while loading the page\n            // So, doing a hard reload is the proper way to deal with this.\n            window.location.href = as5;\n            // Changing the URL doesn't block executing the current code path.\n            // So let's throw a cancellation error stop the routing logic.\n            throw buildCancellationError();\n        }\n        try {\n            let Component;\n            let styleSheets;\n            let props;\n            if (typeof Component === 'undefined' || typeof styleSheets === 'undefined') {\n                ({ page: Component , styleSheets  } = await this.fetchComponent('/_error'));\n            }\n            const routeInfo = {\n                props,\n                Component,\n                styleSheets,\n                err: err1,\n                error: err1\n            };\n            if (!routeInfo.props) {\n                try {\n                    routeInfo.props = await this.getInitialProps(Component, {\n                        err: err1,\n                        pathname,\n                        query\n                    });\n                } catch (gipErr) {\n                    console.error('Error in error page `getInitialProps`: ', gipErr);\n                    routeInfo.props = {\n                    };\n                }\n            }\n            return routeInfo;\n        } catch (routeInfoErr) {\n            return this.handleRouteInfoError((0, _isError).default(routeInfoErr) ? routeInfoErr : new Error(routeInfoErr + ''), pathname, query, as5, routeProps, true);\n        }\n    }\n    async getRouteInfo(route, pathname2, query2, as6, resolvedAs, routeProps1) {\n        try {\n            const existingRouteInfo = this.components[route];\n            if (routeProps1.shallow && existingRouteInfo && this.route === route) {\n                return existingRouteInfo;\n            }\n            let cachedRouteInfo = undefined;\n            // can only use non-initial route info\n            // cannot reuse route info in development since it can change after HMR\n            if (false) {}\n            const routeInfo = cachedRouteInfo || await this.fetchComponent(route).then((res)=>({\n                    Component: res.page,\n                    styleSheets: res.styleSheets,\n                    __N_SSG: res.mod.__N_SSG,\n                    __N_SSP: res.mod.__N_SSP\n                })\n            );\n            const { Component , __N_SSG , __N_SSP  } = routeInfo;\n            if (true) {\n                const { isValidElementType  } = __webpack_require__(/*! react-is */ \"react-is\");\n                if (!isValidElementType(Component)) {\n                    throw new Error(`The default export is not a React Component in page: \"${pathname2}\"`);\n                }\n            }\n            let dataHref;\n            if (__N_SSG || __N_SSP) {\n                dataHref = this.pageLoader.getDataHref((0, _utils).formatWithValidation({\n                    pathname: pathname2,\n                    query: query2\n                }), resolvedAs, __N_SSG, this.locale);\n            }\n            const props = await this._getData(()=>__N_SSG || __N_SSP ? fetchNextData(dataHref, this.isSsr, __N_SSG ? this.sdc : this.sdr, !!__N_SSG) : this.getInitialProps(Component, {\n                    pathname: pathname2,\n                    query: query2,\n                    asPath: as6,\n                    locale: this.locale,\n                    locales: this.locales,\n                    defaultLocale: this.defaultLocale\n                })\n            );\n            routeInfo.props = props;\n            this.components[route] = routeInfo;\n            return routeInfo;\n        } catch (err) {\n            return this.handleRouteInfoError((0, _isError).default(err) ? err : new Error(err + ''), pathname2, query2, as6, routeProps1);\n        }\n    }\n    set(route1, pathname3, query3, as7, data1, resetScroll) {\n        this.isFallback = false;\n        this.route = route1;\n        this.pathname = pathname3;\n        this.query = query3;\n        this.asPath = as7;\n        return this.notify(data1, resetScroll);\n    }\n    /**\n   * Callback to execute before replacing router state\n   * @param cb callback to be executed\n   */ beforePopState(cb) {\n        this._bps = cb;\n    }\n    onlyAHashChange(as8) {\n        if (!this.asPath) return false;\n        const [oldUrlNoHash, oldHash] = this.asPath.split('#');\n        const [newUrlNoHash, newHash] = as8.split('#');\n        // Makes sure we scroll to the provided hash if the url/hash are the same\n        if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {\n            return true;\n        }\n        // If the urls are change, there's more than a hash change\n        if (oldUrlNoHash !== newUrlNoHash) {\n            return false;\n        }\n        // If the hash has changed, then it's a hash only change.\n        // This check is necessary to handle both the enter and\n        // leave hash === '' cases. The identity case falls through\n        // and is treated as a next reload.\n        return oldHash !== newHash;\n    }\n    scrollToHash(as9) {\n        const [, hash] = as9.split('#');\n        // Scroll to top if the hash is just `#` with no value or `#top`\n        // To mirror browsers\n        if (hash === '' || hash === 'top') {\n            window.scrollTo(0, 0);\n            return;\n        }\n        // First we check if the element by id is found\n        const idEl = document.getElementById(hash);\n        if (idEl) {\n            idEl.scrollIntoView();\n            return;\n        }\n        // If there's no element with the id, we check the `name` property\n        // To mirror browsers\n        const nameEl = document.getElementsByName(hash)[0];\n        if (nameEl) {\n            nameEl.scrollIntoView();\n        }\n    }\n    urlIsNew(asPath) {\n        return this.asPath !== asPath;\n    }\n    /**\n   * Prefetch page code, you may wait for the data during page rendering.\n   * This feature only works in production!\n   * @param url the href of prefetched page\n   * @param asPath the as path of the prefetched page\n   */ async prefetch(url4, asPath1 = url4, options4 = {\n    }) {\n        let parsed = (0, _parseRelativeUrl).parseRelativeUrl(url4);\n        let { pathname , query  } = parsed;\n        if (false) {}\n        const pages = await this.pageLoader.getPageList();\n        let resolvedAs = asPath1;\n        if (false) {} else {\n            parsed.pathname = resolveDynamicRoute(parsed.pathname, pages);\n            if (parsed.pathname !== pathname) {\n                pathname = parsed.pathname;\n                parsed.pathname = pathname;\n                url4 = (0, _utils).formatWithValidation(parsed);\n            }\n        }\n        // Prefetch is not supported in development mode because it would trigger on-demand-entries\n        if (true) {\n            return;\n        }\n        const effects = await this._preflightRequest({\n            as: asPath1,\n            cache: true,\n            pages,\n            pathname,\n            query\n        });\n        if (effects.type === 'rewrite') {\n            parsed.pathname = effects.resolvedHref;\n            pathname = effects.resolvedHref;\n            query = {\n                ...query,\n                ...effects.parsedAs.query\n            };\n            resolvedAs = effects.asPath;\n            url4 = (0, _utils).formatWithValidation(parsed);\n        }\n        const route = (0, _normalizeTrailingSlash).removePathTrailingSlash(pathname);\n        await Promise.all([\n            this.pageLoader._isSsg(route).then((isSsg)=>{\n                return isSsg ? fetchNextData(this.pageLoader.getDataHref(url4, resolvedAs, true, typeof options4.locale !== 'undefined' ? options4.locale : this.locale), false, this.sdc, true) : false;\n            }),\n            this.pageLoader[options4.priority ? 'loadPage' : 'prefetch'](route), \n        ]);\n    }\n    async fetchComponent(route2) {\n        let cancelled = false;\n        const cancel = this.clc = ()=>{\n            cancelled = true;\n        };\n        const handleCancelled = ()=>{\n            if (cancelled) {\n                const error = new Error(`Abort fetching component for route: \"${route2}\"`);\n                error.cancelled = true;\n                throw error;\n            }\n            if (cancel === this.clc) {\n                this.clc = null;\n            }\n        };\n        try {\n            const componentResult = await this.pageLoader.loadPage(route2);\n            handleCancelled();\n            return componentResult;\n        } catch (err) {\n            handleCancelled();\n            throw err;\n        }\n    }\n    _getData(fn) {\n        let cancelled = false;\n        const cancel = ()=>{\n            cancelled = true;\n        };\n        this.clc = cancel;\n        return fn().then((data)=>{\n            if (cancel === this.clc) {\n                this.clc = null;\n            }\n            if (cancelled) {\n                const err = new Error('Loading initial props cancelled');\n                err.cancelled = true;\n                throw err;\n            }\n            return data;\n        });\n    }\n    async _preflightRequest(options5) {\n        var ref;\n        const cleanedAs = delLocale(hasBasePath(options5.as) ? delBasePath(options5.as) : options5.as, this.locale);\n        const fns = await this.pageLoader.getMiddlewareList();\n        const requiresPreflight = fns.some((middleware)=>{\n            return (0, _routeMatcher).getRouteMatcher((0, _getMiddlewareRegex).getMiddlewareRegex(middleware))(cleanedAs);\n        });\n        if (!requiresPreflight) {\n            return {\n                type: 'next'\n            };\n        }\n        const preflight = await this._getPreflightData({\n            preflightHref: options5.as,\n            shouldCache: options5.cache\n        });\n        if ((ref = preflight.rewrite) === null || ref === void 0 ? void 0 : ref.startsWith('/')) {\n            const parsed = (0, _parseRelativeUrl).parseRelativeUrl((0, _normalizeLocalePath).normalizeLocalePath(hasBasePath(preflight.rewrite) ? delBasePath(preflight.rewrite) : preflight.rewrite, this.locales).pathname);\n            const fsPathname = (0, _normalizeTrailingSlash).removePathTrailingSlash(parsed.pathname);\n            let matchedPage;\n            let resolvedHref;\n            if (options5.pages.includes(fsPathname)) {\n                matchedPage = true;\n                resolvedHref = fsPathname;\n            } else {\n                resolvedHref = resolveDynamicRoute(fsPathname, options5.pages);\n                if (resolvedHref !== parsed.pathname && options5.pages.includes(resolvedHref)) {\n                    matchedPage = true;\n                }\n            }\n            return {\n                type: 'rewrite',\n                asPath: parsed.pathname,\n                parsedAs: parsed,\n                matchedPage,\n                resolvedHref\n            };\n        }\n        if (preflight.redirect) {\n            if (preflight.redirect.startsWith('/')) {\n                const cleanRedirect = (0, _normalizeTrailingSlash).removePathTrailingSlash((0, _normalizeLocalePath).normalizeLocalePath(hasBasePath(preflight.redirect) ? delBasePath(preflight.redirect) : preflight.redirect, this.locales).pathname);\n                const { url: newUrl , as: newAs  } = prepareUrlAs(this, cleanRedirect, cleanRedirect);\n                return {\n                    type: 'redirect',\n                    newUrl,\n                    newAs\n                };\n            }\n            return {\n                type: 'redirect',\n                destination: preflight.redirect\n            };\n        }\n        if (preflight.refresh) {\n            return {\n                type: 'refresh'\n            };\n        }\n        return {\n            type: 'next'\n        };\n    }\n    _getPreflightData(params) {\n        const { preflightHref , shouldCache =false  } = params;\n        const { href: cacheKey  } = new URL(preflightHref, window.location.href);\n        if (false) {}\n        return fetch(preflightHref, {\n            method: 'HEAD',\n            credentials: 'same-origin',\n            headers: {\n                'x-middleware-preflight': '1'\n            }\n        }).then((res)=>{\n            if (!res.ok) {\n                throw new Error(`Failed to preflight request`);\n            }\n            return {\n                redirect: res.headers.get('Location'),\n                refresh: res.headers.has('x-middleware-refresh'),\n                rewrite: res.headers.get('x-middleware-rewrite')\n            };\n        }).then((data)=>{\n            if (shouldCache) {\n                this.sde[cacheKey] = data;\n            }\n            return data;\n        }).catch((err)=>{\n            delete this.sde[cacheKey];\n            throw err;\n        });\n    }\n    getInitialProps(Component1, ctx) {\n        const { Component: App  } = this.components['/_app'];\n        const AppTree = this._wrapApp(App);\n        ctx.AppTree = AppTree;\n        return (0, _utils).loadGetInitialProps(App, {\n            AppTree,\n            Component: Component1,\n            router: this,\n            ctx\n        });\n    }\n    abortComponentLoad(as10, routeProps2) {\n        if (this.clc) {\n            Router.events.emit('routeChangeError', buildCancellationError(), as10, routeProps2);\n            this.clc();\n            this.clc = null;\n        }\n    }\n    notify(data, resetScroll1) {\n        return this.sub(data, this.components['/_app'].Component, resetScroll1);\n    }\n}\nRouter.events = (0, _mitt).default();\nexports[\"default\"] = Router; //# sourceMappingURL=router.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/shared/lib/router/router.js\n");

/***/ }),

/***/ "./pages/index.tsx":
/*!*************************!*\
  !*** ./pages/index.tsx ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"react/jsx-runtime\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! firebase/auth */ \"./node_modules/firebase/auth/dist/index.mjs\");\n/* harmony import */ var _firebase_database__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @firebase/database */ \"@firebase/database\");\n/* harmony import */ var _firebase_database__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_firebase_database__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_client_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/client/router */ \"./node_modules/next/dist/client/router.js\");\n/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! sweetalert2 */ \"sweetalert2\");\n/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _components_modalLogin__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../components/modalLogin */ \"./components/modalLogin.tsx\");\n/* harmony import */ var _components_modalCreateUsername__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../components/modalCreateUsername */ \"./components/modalCreateUsername.tsx\");\n/* harmony import */ var _services_encode__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../services/encode */ \"./services/encode.tsx\");\n/* harmony import */ var _components_CardGame__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../components/CardGame */ \"./components/CardGame.tsx\");\n/* harmony import */ var _components_Alerts__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../components/Alerts */ \"./components/Alerts.tsx\");\n\n\n\n\n\n\n\n\n\n\n\nconst Home = ()=>{\n    const { 0: listGames , 1: setListGames  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const { 0: user1 , 1: setUser  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        username: \"\"\n    });\n    const { 0: roomName , 1: setRoomName  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const { 0: roomPassword , 1: setRoomPassword  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const { 0: maxUsers1 , 1: setMaxUsers  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(2);\n    const router = (0,next_dist_client_router__WEBPACK_IMPORTED_MODULE_4__.useRouter)();\n    const db = (0,_firebase_database__WEBPACK_IMPORTED_MODULE_3__.getDatabase)();\n    const auth = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_2__.getAuth)();\n    const btnModal = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createRef)();\n    const btnModalUsername = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createRef)();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        //If exist userKey get user from DB\n        let mounted = true;\n        if (router.query.kickedOut === \"true\") {\n            router.replace(\"/\");\n            sweetalert2__WEBPACK_IMPORTED_MODULE_5___default().fire({\n                title: \"You were kicked out by the owner.\",\n                icon: \"error\",\n                confirmButtonText: \"Ok\"\n            });\n        }\n        function updateUserName(name) {\n            let key = sessionStorage.getItem(\"userKey\");\n            let objUser = JSON.parse(sessionStorage.getItem(\"objUser\"));\n            if (objUser) {\n                setUser(objUser);\n            } else if (key !== null) {\n                const refUsers = (0,_firebase_database__WEBPACK_IMPORTED_MODULE_3__.ref)(db, `users/${key}`);\n                (0,_firebase_database__WEBPACK_IMPORTED_MODULE_3__.onValue)(refUsers, (snapshot)=>{\n                    let obj = {\n                        username: snapshot.val().username,\n                        maxScore: snapshot.val().maxScore,\n                        email: snapshot.val().email\n                    };\n                    setUser(obj);\n                    sessionStorage.setItem(\"objUser\", JSON.stringify(obj));\n                });\n            } else {\n                setUser({\n                    username: name\n                });\n            }\n        }\n        //If user name exist, update it on state\n        if (mounted) {\n            auth.onAuthStateChanged((user)=>{\n                if (user) {\n                    if (user.isAnonymous) {\n                        let username = localStorage.getItem(\"user\");\n                        if (user.uid && username) {\n                            localStorage.setItem(\"uid\", user.uid);\n                            setUser({\n                                username: username\n                            });\n                        }\n                    } else {\n                        let key = sessionStorage.getItem(\"userKey\");\n                        let objUser = JSON.parse(sessionStorage.getItem(\"objUser\"));\n                        if (objUser) {\n                            if (!localStorage.getItem(\"user\")) {\n                                localStorage.setItem(\"user\", objUser.username);\n                            }\n                            setUser(objUser);\n                        } else if (key) {\n                            updateUserName(\"\");\n                        } else {\n                            let finded = false;\n                            let refUsers = (0,_firebase_database__WEBPACK_IMPORTED_MODULE_3__.ref)(db, \"users\");\n                            (0,_firebase_database__WEBPACK_IMPORTED_MODULE_3__.get)(refUsers).then((snapshot)=>{\n                                if (snapshot.val() !== null) {\n                                    let usersDB = snapshot.val();\n                                    Object.entries(usersDB).forEach((value)=>{\n                                        if (value[1].email && value[1].email === user.email) {\n                                            finded = true;\n                                            let obj = {\n                                                username: value[1].username,\n                                                maxScore: value[1].maxScore,\n                                                email: value[1].email\n                                            };\n                                            localStorage.setItem(\"user\", value[1].username);\n                                            sessionStorage.setItem(\"userKey\", value[0]);\n                                            setUser(obj);\n                                            sessionStorage.setItem(\"objUser\", JSON.stringify(obj));\n                                        }\n                                    });\n                                    if (!finded) {\n                                        var ref;\n                                        (ref = btnModal.current) === null || ref === void 0 ? void 0 : ref.click();\n                                    }\n                                }\n                            });\n                        }\n                    }\n                } else {\n                    let currentUser = localStorage.getItem(\"user\");\n                    console.log(currentUser);\n                    if (!!currentUser) {\n                        updateUserName(currentUser);\n                    } else {\n                        var ref1;\n                        (ref1 = btnModal.current) === null || ref1 === void 0 ? void 0 : ref1.click();\n                    }\n                }\n            });\n        }\n        return ()=>{\n            mounted = false;\n        };\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        let mounted = true;\n        //Get rooms of games from DB\n        if (user1.username !== \"\") {\n            const refGames = (0,_firebase_database__WEBPACK_IMPORTED_MODULE_3__.ref)(db, `games`);\n            (0,_firebase_database__WEBPACK_IMPORTED_MODULE_3__.onValue)(refGames, (snapshot)=>{\n                if (snapshot.val() !== null) {\n                    if (mounted) {\n                        setListGames(snapshot.val());\n                    }\n                } else {\n                    setListGames([]);\n                }\n            });\n        }\n        return ()=>{\n            mounted = false;\n        };\n    }, [\n        user1.username\n    ]);\n    //Function for create room\n    const handleCreate = ()=>{\n        var ref;\n        let newGameRef, newRoomName;\n        newGameRef = (0,_firebase_database__WEBPACK_IMPORTED_MODULE_3__.ref)(db, \"games/\");\n        if (roomName === \"\") {\n            newRoomName = user1.username + \"'s room\";\n        } else {\n            newRoomName = roomName;\n        }\n        let userToPush = {\n            username: user1.username,\n            clicks: 0,\n            rol: \"owner\"\n        };\n        if (user1.maxScore) {\n            userToPush[\"maxScore\"] = user1.maxScore;\n        }\n        let objRoom = {\n            roomName: newRoomName,\n            currentGame: false,\n            gameStart: false,\n            // listUsers: [userToPush],\n            // password: encryptPass,\n            listUsers: [],\n            ownerUser: user1,\n            visitorUser: null,\n            timeStart: 3,\n            timer: 10,\n            maxUsers: +maxUsers1\n        };\n        let newKey = (0,_firebase_database__WEBPACK_IMPORTED_MODULE_3__.push)(newGameRef, objRoom).key;\n        let childNewGame = (0,_firebase_database__WEBPACK_IMPORTED_MODULE_3__.child)(newGameRef, `${newKey}/listUsers/${(ref = auth.currentUser) === null || ref === void 0 ? void 0 : ref.uid}`);\n        (0,_firebase_database__WEBPACK_IMPORTED_MODULE_3__.set)(childNewGame, userToPush);\n        if (roomPassword !== \"\") {\n            let refActualGame = (0,_firebase_database__WEBPACK_IMPORTED_MODULE_3__.ref)(db, `games/${newKey}`);\n            (0,_services_encode__WEBPACK_IMPORTED_MODULE_8__.sha256)(roomPassword).then((hash)=>(0,_firebase_database__WEBPACK_IMPORTED_MODULE_3__.update)(refActualGame, {\n                    password: hash\n                })\n            );\n        }\n        if (newKey) {\n            sessionStorage.setItem(\"actualIDGame\", newKey);\n            sessionStorage.setItem(\"actualOwner\", user1.username);\n            sessionStorage.setItem(\"gameUserKey\", \"0\");\n            router.push(\"/game/\" + newKey);\n        } else {\n            sweetalert2__WEBPACK_IMPORTED_MODULE_5___default().fire({\n                icon: \"error\",\n                title: \"Ups! We couldn't create the room, please try again.\",\n                timer: 3000\n            });\n        }\n    };\n    //Function for enter room\n    const handleEnterGame = (idGame, owner, actualUsers, maxUsers, password)=>{\n        if (Object.keys(actualUsers).length === maxUsers) {\n            sweetalert2__WEBPACK_IMPORTED_MODULE_5___default().fire({\n                icon: \"warning\",\n                title: \"Room is full\",\n                toast: true,\n                showConfirmButton: false,\n                position: \"bottom-end\",\n                timer: 3000\n            });\n        } else {\n            if (password) {\n                (0,_components_Alerts__WEBPACK_IMPORTED_MODULE_10__.requestPassword)(password).then((val)=>{\n                    console.log(val);\n                    if (val) configRoomToEnter(idGame, owner);\n                });\n            } else {\n                configRoomToEnter(idGame, owner);\n            }\n        }\n    };\n    const configRoomToEnter = (idGame, owner)=>{\n        sessionStorage.setItem(\"actualIDGame\", idGame);\n        sessionStorage.setItem(\"actualOwner\", owner);\n        if (owner !== user1.username) {\n            var ref;\n            if ((ref = auth.currentUser) === null || ref === void 0 ? void 0 : ref.uid) {\n                let userToPush = {\n                    username: user1.username,\n                    clicks: 0,\n                    rol: \"visitor\"\n                };\n                if (user1.maxScore) {\n                    userToPush[\"maxScore\"] = user1.maxScore;\n                }\n                let refGame = (0,_firebase_database__WEBPACK_IMPORTED_MODULE_3__.ref)(db, `games/${idGame}/listUsers`);\n                let childRef = (0,_firebase_database__WEBPACK_IMPORTED_MODULE_3__.child)(refGame, auth.currentUser.uid);\n                (0,_firebase_database__WEBPACK_IMPORTED_MODULE_3__.set)(childRef, userToPush);\n                sessionStorage.setItem(\"wasOnRoom\", JSON.stringify(true));\n                router.push(`game/${idGame}`);\n            // let userKey = push(refGames, userToPush).key;\n            // if (userKey) {\n            //   sessionStorage.setItem(\"gameUserKey\", userKey);\n            // } else {\n            //   console.error(\"Error loading useer to game\");\n            // }\n            } else {\n                console.error(\"Error loading useer to game\");\n            }\n        }\n    };\n    //Function for handle input room name\n    const handleChange = (e)=>{\n        setRoomName(e.target.value);\n    };\n    const handleChangePass = (e)=>{\n        setRoomPassword(e.target.value);\n    };\n    //Function for update maxUsers for the new room\n    const handleNumberUsers = (e)=>{\n        setMaxUsers(Number(e.target.value));\n    };\n    //Function for login a guest user\n    const handleLoginGuest = (user)=>{\n        var // document.getElementById(\"btnModal\").click();\n        ref;\n        localStorage.setItem(\"user\", user);\n        (0,firebase_auth__WEBPACK_IMPORTED_MODULE_2__.signInAnonymously)(auth).then(()=>{\n            console.log(auth.currentUser);\n        }).catch((e)=>console.error(e)\n        );\n        setUser({\n            username: user\n        });\n        (ref = btnModal.current) === null || ref === void 0 ? void 0 : ref.click();\n    };\n    //Function for login a Google account user\n    const handleLoginGoogle = (data)=>{\n        //Check if user is new\n        let userEmail = data.user.email;\n        let userNew = true;\n        let refUsers1 = (0,_firebase_database__WEBPACK_IMPORTED_MODULE_3__.ref)(db, \"users\");\n        (0,_firebase_database__WEBPACK_IMPORTED_MODULE_3__.onValue)(refUsers1, (snapshot)=>{\n            if (snapshot.val() !== null) {\n                Object.entries(snapshot.val()).forEach((value)=>{\n                    if (value[1].email && value[1].email === userEmail) {\n                        userNew = false;\n                        localStorage.setItem(\"user\", value[1].username);\n                        sessionStorage.setItem(\"userKey\", value[0]);\n                        setUser({\n                            username: value[1].username,\n                            maxScore: value[1].maxScore,\n                            email: value[1].email\n                        });\n                        return;\n                    }\n                });\n                if (userNew) {\n                    var ref, ref3;\n                    let refUsers = (0,_firebase_database__WEBPACK_IMPORTED_MODULE_3__.ref)(db, \"users\");\n                    let newKeyUser = (0,_firebase_database__WEBPACK_IMPORTED_MODULE_3__.push)(refUsers, {\n                        email: userEmail,\n                        maxScore: 0,\n                        username: data.user.displayName\n                    }).key;\n                    if (newKeyUser) {\n                        sessionStorage.setItem(\"userKey\", newKeyUser);\n                    } else {\n                        console.error(\"Error generating new user\");\n                    }\n                    setUser(data.user.displayName);\n                    (ref = btnModal.current) === null || ref === void 0 ? void 0 : ref.click();\n                    (ref3 = btnModalUsername.current) === null || ref3 === void 0 ? void 0 : ref3.click();\n                }\n            }\n        });\n    };\n    //Function for logout user.\n    const handleLogOut = ()=>{\n        var ref;\n        if (auth.currentUser) {\n            auth.signOut();\n        }\n        setUser({\n            ...user1,\n            username: \"\",\n            maxScore: 0\n        });\n        localStorage.removeItem(\"user\");\n        sessionStorage.removeItem(\"userKey\");\n        (ref = btnModal.current) === null || ref === void 0 ? void 0 : ref.click();\n    };\n    return(/*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                className: \"main\",\n                __source: {\n                    fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\pages\\\\index.tsx\",\n                    lineNumber: 356\n                },\n                __self: undefined,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"button\", {\n                        ref: btnModal,\n                        type: \"button\",\n                        hidden: true,\n                        \"data-bs-toggle\": \"modal\",\n                        \"data-bs-target\": \"#modalLogin\",\n                        id: \"btnModal\",\n                        __source: {\n                            fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\pages\\\\index.tsx\",\n                            lineNumber: 357\n                        },\n                        __self: undefined\n                    }),\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"button\", {\n                        type: \"button\",\n                        hidden: true,\n                        \"data-bs-toggle\": \"modal\",\n                        \"data-bs-target\": \"#modalCreateUsername\",\n                        id: \"btnModalUsername\",\n                        ref: btnModalUsername,\n                        __source: {\n                            fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\pages\\\\index.tsx\",\n                            lineNumber: 365\n                        },\n                        __self: undefined\n                    }),\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                        className: \"row row-home h-100 w-100\",\n                        __source: {\n                            fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\pages\\\\index.tsx\",\n                            lineNumber: 373\n                        },\n                        __self: undefined,\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                                className: \"col-lg-4 order-md-2 create-section\",\n                                __source: {\n                                    fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\pages\\\\index.tsx\",\n                                    lineNumber: 374\n                                },\n                                __self: undefined,\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"h1\", {\n                                        className: \"text-center mb-4\",\n                                        __source: {\n                                            fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\pages\\\\index.tsx\",\n                                            lineNumber: 375\n                                        },\n                                        __self: undefined,\n                                        children: \"Click battle!\"\n                                    }),\n                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"button\", {\n                                        className: \"btn-click mb-3 mb-md-5\",\n                                        disabled: !!!user1.username,\n                                        onClick: ()=>handleCreate()\n                                        ,\n                                        __source: {\n                                            fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\pages\\\\index.tsx\",\n                                            lineNumber: 376\n                                        },\n                                        __self: undefined,\n                                        children: \"Create game\"\n                                    }),\n                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", {\n                                        __source: {\n                                            fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\pages\\\\index.tsx\",\n                                            lineNumber: 383\n                                        },\n                                        __self: undefined,\n                                        children: \"Insert room name\"\n                                    }),\n                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", {\n                                        type: \"text\",\n                                        className: \"form-name mb-2\",\n                                        \"data-label\": \"Room name\",\n                                        value: roomName,\n                                        onChange: (ref)=>handleChange(ref)\n                                        ,\n                                        placeholder: `${user1.username}'s room`,\n                                        __source: {\n                                            fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\pages\\\\index.tsx\",\n                                            lineNumber: 384\n                                        },\n                                        __self: undefined\n                                    }),\n                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", {\n                                        __source: {\n                                            fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\pages\\\\index.tsx\",\n                                            lineNumber: 392\n                                        },\n                                        __self: undefined,\n                                        children: \"Insert room password (op)\"\n                                    }),\n                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", {\n                                        type: \"text\",\n                                        className: \"form-name mb-2\",\n                                        \"data-label\": \"Password\",\n                                        value: roomPassword,\n                                        onChange: (ref)=>handleChangePass(ref)\n                                        ,\n                                        placeholder: `Password`,\n                                        __source: {\n                                            fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\pages\\\\index.tsx\",\n                                            lineNumber: 393\n                                        },\n                                        __self: undefined\n                                    }),\n                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", {\n                                        __source: {\n                                            fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\pages\\\\index.tsx\",\n                                            lineNumber: 401\n                                        },\n                                        __self: undefined,\n                                        children: \"Max number of users\"\n                                    }),\n                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"select\", {\n                                        className: \"form-name mb-2\",\n                                        \"data-label\": \"Room name\",\n                                        value: maxUsers1,\n                                        onChange: (ref)=>handleNumberUsers(ref)\n                                        ,\n                                        __source: {\n                                            fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\pages\\\\index.tsx\",\n                                            lineNumber: 402\n                                        },\n                                        __self: undefined,\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"option\", {\n                                                value: \"2\",\n                                                __source: {\n                                                    fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\pages\\\\index.tsx\",\n                                                    lineNumber: 408\n                                                },\n                                                __self: undefined,\n                                                children: \"2\"\n                                            }),\n                                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"option\", {\n                                                value: \"3\",\n                                                __source: {\n                                                    fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\pages\\\\index.tsx\",\n                                                    lineNumber: 409\n                                                },\n                                                __self: undefined,\n                                                children: \"3\"\n                                            }),\n                                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"option\", {\n                                                value: \"4\",\n                                                __source: {\n                                                    fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\pages\\\\index.tsx\",\n                                                    lineNumber: 410\n                                                },\n                                                __self: undefined,\n                                                children: \"4\"\n                                            }),\n                                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"option\", {\n                                                value: \"5\",\n                                                __source: {\n                                                    fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\pages\\\\index.tsx\",\n                                                    lineNumber: 411\n                                                },\n                                                __self: undefined,\n                                                children: \"5\"\n                                            }),\n                                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"option\", {\n                                                value: \"6\",\n                                                __source: {\n                                                    fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\pages\\\\index.tsx\",\n                                                    lineNumber: 412\n                                                },\n                                                __self: undefined,\n                                                children: \"6\"\n                                            }),\n                                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"option\", {\n                                                value: \"7\",\n                                                __source: {\n                                                    fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\pages\\\\index.tsx\",\n                                                    lineNumber: 413\n                                                },\n                                                __self: undefined,\n                                                children: \"7\"\n                                            }),\n                                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"option\", {\n                                                value: \"8\",\n                                                __source: {\n                                                    fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\pages\\\\index.tsx\",\n                                                    lineNumber: 414\n                                                },\n                                                __self: undefined,\n                                                children: \"8\"\n                                            }),\n                                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"option\", {\n                                                value: \"9\",\n                                                __source: {\n                                                    fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\pages\\\\index.tsx\",\n                                                    lineNumber: 415\n                                                },\n                                                __self: undefined,\n                                                children: \"9\"\n                                            }),\n                                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"option\", {\n                                                value: \"10\",\n                                                __source: {\n                                                    fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\pages\\\\index.tsx\",\n                                                    lineNumber: 416\n                                                },\n                                                __self: undefined,\n                                                children: \"10\"\n                                            })\n                                        ]\n                                    })\n                                ]\n                            }),\n                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                                className: \"col-lg-8 order-md-1 rooms-section\",\n                                __source: {\n                                    fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\pages\\\\index.tsx\",\n                                    lineNumber: 419\n                                },\n                                __self: undefined,\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"h2\", {\n                                        __source: {\n                                            fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\pages\\\\index.tsx\",\n                                            lineNumber: 420\n                                        },\n                                        __self: undefined,\n                                        children: \"Available rooms\"\n                                    }),\n                                    Object.entries(listGames).length > 0 ? /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                                        className: \"row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 h-100\",\n                                        __source: {\n                                            fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\pages\\\\index.tsx\",\n                                            lineNumber: 422\n                                        },\n                                        __self: undefined,\n                                        children: Object.entries(listGames).map((game, i)=>{\n                                            return(/*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_CardGame__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                                                game: game,\n                                                roomNumber: i,\n                                                handleEnterGame: (key, username, list, maxUsers, password)=>handleEnterGame(key, username, list, maxUsers, password)\n                                                ,\n                                                __source: {\n                                                    fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\pages\\\\index.tsx\",\n                                                    lineNumber: 425\n                                                },\n                                                __self: undefined\n                                            }, i));\n                                        })\n                                    }) : /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"h4\", {\n                                        className: \"h-100\",\n                                        __source: {\n                                            fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\pages\\\\index.tsx\",\n                                            lineNumber: 443\n                                        },\n                                        __self: undefined,\n                                        children: \"No available rooms right now, create one!\"\n                                    })\n                                ]\n                            })\n                        ]\n                    }),\n                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"footer\", {\n                        className: \"mt-auto\",\n                        __source: {\n                            fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\pages\\\\index.tsx\",\n                            lineNumber: 449\n                        },\n                        __self: undefined,\n                        children: [\n                            user1.username !== \"\" && /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                                className: \"txt-user text-center\",\n                                __source: {\n                                    fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\pages\\\\index.tsx\",\n                                    lineNumber: 451\n                                },\n                                __self: undefined,\n                                children: [\n                                    \" \",\n                                    \"logged as \",\n                                    user1.username,\n                                    \" -\",\n                                    \" \",\n                                    /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", {\n                                        className: \"btn-logout\",\n                                        onClick: ()=>handleLogOut()\n                                        ,\n                                        __source: {\n                                            fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\pages\\\\index.tsx\",\n                                            lineNumber: 454\n                                        },\n                                        __self: undefined,\n                                        children: \"Log out\"\n                                    }),\n                                    \" \"\n                                ]\n                            }),\n                            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                                className: \"footer text-end mx-5\",\n                                __source: {\n                                    fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\pages\\\\index.tsx\",\n                                    lineNumber: 459\n                                },\n                                __self: undefined,\n                                children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"a\", {\n                                    href: \"https://cafecito.app/leanlescano\",\n                                    rel: \"noreferrer\",\n                                    target: \"_blank\",\n                                    __source: {\n                                        fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\pages\\\\index.tsx\",\n                                        lineNumber: 460\n                                    },\n                                    __self: undefined,\n                                    children: /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"img\", {\n                                        srcSet: \"https://cdn.cafecito.app/imgs/buttons/button_2.png 1x, https://cdn.cafecito.app/imgs/buttons/button_2_2x.png 2x, https://cdn.cafecito.app/imgs/buttons/button_2_3.75x.png 3.75x\",\n                                        src: \"https://cdn.cafecito.app/imgs/buttons/button_2.png\",\n                                        alt: \"Invitame un caf\\xe9 en cafecito.app\",\n                                        __source: {\n                                            fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\pages\\\\index.tsx\",\n                                            lineNumber: 465\n                                        },\n                                        __self: undefined\n                                    })\n                                })\n                            })\n                        ]\n                    }),\n                    user1.email && /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                        className: \"score-container float-right\",\n                        __source: {\n                            fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\pages\\\\index.tsx\",\n                            lineNumber: 474\n                        },\n                        __self: undefined,\n                        children: [\n                            \"Max score: \",\n                            user1.maxScore\n                        ]\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_modalLogin__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                // user={user}\n                loginGuest: (name)=>handleLoginGuest(name)\n                ,\n                close: ()=>document.getElementById(\"btnModal\").click()\n                ,\n                loginGoogle: (name)=>handleLoginGoogle(name)\n                ,\n                __source: {\n                    fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\pages\\\\index.tsx\",\n                    lineNumber: 479\n                },\n                __self: undefined\n            }),\n            /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_modalCreateUsername__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n                close: ()=>{\n                    var ref;\n                    return (ref = btnModalUsername.current) === null || ref === void 0 ? void 0 : ref.click();\n                },\n                __source: {\n                    fileName: \"C:\\\\Users\\\\Tateh\\\\Desktop\\\\ReactJs\\\\click-battle-next\\\\pages\\\\index.tsx\",\n                    lineNumber: 485\n                },\n                __self: undefined\n            })\n        ]\n    }));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Home);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/index.tsx\n");

/***/ }),

/***/ "./services/encode.tsx":
/*!*****************************!*\
  !*** ./services/encode.tsx ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sha256\": () => (/* binding */ sha256)\n/* harmony export */ });\nconst sha256 = async (password)=>{\n    let encoder = new TextEncoder();\n    let data = encoder.encode(password);\n    let hash = Array.prototype.map.call(new Uint8Array(await crypto.subtle.digest(\"SHA-256\", data)), (x)=>(\"0\" + x.toString(16)).slice(-2)\n    ).join(\"\");\n    return hash;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zZXJ2aWNlcy9lbmNvZGUudHN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxLQUFLLENBQUNBLE1BQU0sVUFBVUMsUUFBc0IsR0FBSyxDQUFDO0lBQ3ZELEdBQUcsQ0FBQ0MsT0FBTyxHQUFHLEdBQUcsQ0FBQ0MsV0FBVztJQUM3QixHQUFHLENBQUNDLElBQUksR0FBR0YsT0FBTyxDQUFDRyxNQUFNLENBQUNKLFFBQVE7SUFDbEMsR0FBRyxDQUFDSyxJQUFJLEdBQUdDLEtBQUssQ0FBQ0MsU0FBUyxDQUFDQyxHQUFHLENBQzNCQyxJQUFJLENBQUMsR0FBRyxDQUFDQyxVQUFVLENBQUMsS0FBSyxDQUFDQyxNQUFNLENBQUNDLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDLENBQVMsVUFBRVYsSUFBSSxLQUFLVyxDQUFDLElBQ2xFLENBQUcsS0FBR0EsQ0FBQyxDQUFDQyxRQUFRLENBQUMsRUFBRSxHQUFHQyxLQUFLLEVBQUUsQ0FBQztNQUVoQ0MsSUFBSSxDQUFDLENBQUU7SUFDVixNQUFNLENBQUNaLElBQUk7QUFDYixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xpY2stYmF0dGxlLW5leHQvLi9zZXJ2aWNlcy9lbmNvZGUudHN4PzNkYjUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHNoYTI1NiA9IGFzeW5jIChwYXNzd29yZDogc3RyaW5nIHwgYW55KSA9PiB7XHJcbiAgbGV0IGVuY29kZXIgPSBuZXcgVGV4dEVuY29kZXIoKTtcclxuICBsZXQgZGF0YSA9IGVuY29kZXIuZW5jb2RlKHBhc3N3b3JkKTtcclxuICBsZXQgaGFzaCA9IEFycmF5LnByb3RvdHlwZS5tYXBcclxuICAgIC5jYWxsKG5ldyBVaW50OEFycmF5KGF3YWl0IGNyeXB0by5zdWJ0bGUuZGlnZXN0KFwiU0hBLTI1NlwiLCBkYXRhKSksICh4KSA9PlxyXG4gICAgICAoXCIwXCIgKyB4LnRvU3RyaW5nKDE2KSkuc2xpY2UoLTIpXHJcbiAgICApXHJcbiAgICAuam9pbihcIlwiKTtcclxuICByZXR1cm4gaGFzaDtcclxufTtcclxuIl0sIm5hbWVzIjpbInNoYTI1NiIsInBhc3N3b3JkIiwiZW5jb2RlciIsIlRleHRFbmNvZGVyIiwiZGF0YSIsImVuY29kZSIsImhhc2giLCJBcnJheSIsInByb3RvdHlwZSIsIm1hcCIsImNhbGwiLCJVaW50OEFycmF5IiwiY3J5cHRvIiwic3VidGxlIiwiZGlnZXN0IiwieCIsInRvU3RyaW5nIiwic2xpY2UiLCJqb2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./services/encode.tsx\n");

/***/ }),

/***/ "./node_modules/next/dist/lib/is-error.js":
/*!************************************************!*\
  !*** ./node_modules/next/dist/lib/is-error.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = isError;\nfunction isError(err) {\n    return typeof err === 'object' && err !== null && 'name' in err && 'message' in err;\n}\n\n//# sourceMappingURL=is-error.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2xpYi9pcy1lcnJvci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xpY2stYmF0dGxlLW5leHQvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2xpYi9pcy1lcnJvci5qcz8xNzhlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gaXNFcnJvcjtcbmZ1bmN0aW9uIGlzRXJyb3IoZXJyKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBlcnIgPT09ICdvYmplY3QnICYmIGVyciAhPT0gbnVsbCAmJiAnbmFtZScgaW4gZXJyICYmICdtZXNzYWdlJyBpbiBlcnI7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlzLWVycm9yLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/lib/is-error.js\n");

/***/ }),

/***/ "@firebase/auth":
/*!*********************************!*\
  !*** external "@firebase/auth" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@firebase/auth");

/***/ }),

/***/ "@firebase/database":
/*!*************************************!*\
  !*** external "@firebase/database" ***!
  \*************************************/
/***/ ((module) => {

module.exports = require("@firebase/database");

/***/ }),

/***/ "@fortawesome/free-solid-svg-icons":
/*!****************************************************!*\
  !*** external "@fortawesome/free-solid-svg-icons" ***!
  \****************************************************/
/***/ ((module) => {

module.exports = require("@fortawesome/free-solid-svg-icons");

/***/ }),

/***/ "@fortawesome/react-fontawesome":
/*!*************************************************!*\
  !*** external "@fortawesome/react-fontawesome" ***!
  \*************************************************/
/***/ ((module) => {

module.exports = require("@fortawesome/react-fontawesome");

/***/ }),

/***/ "../../../server/denormalize-page-path":
/*!************************************************************!*\
  !*** external "next/dist/server/denormalize-page-path.js" ***!
  \************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/server/denormalize-page-path.js");

/***/ }),

/***/ "../i18n/normalize-locale-path":
/*!*********************************************************************!*\
  !*** external "next/dist/shared/lib/i18n/normalize-locale-path.js" ***!
  \*********************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/shared/lib/i18n/normalize-locale-path.js");

/***/ }),

/***/ "../mitt":
/*!***********************************************!*\
  !*** external "next/dist/shared/lib/mitt.js" ***!
  \***********************************************/
/***/ ((module) => {

module.exports = require("next/dist/shared/lib/mitt.js");

/***/ }),

/***/ "../shared/lib/router-context":
/*!*********************************************************!*\
  !*** external "next/dist/shared/lib/router-context.js" ***!
  \*********************************************************/
/***/ ((module) => {

module.exports = require("next/dist/shared/lib/router-context.js");

/***/ }),

/***/ "../shared/lib/router/utils/get-asset-path-from-route":
/*!*********************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/get-asset-path-from-route.js" ***!
  \*********************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/shared/lib/router/utils/get-asset-path-from-route.js");

/***/ }),

/***/ "./utils/get-middleware-regex":
/*!****************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/get-middleware-regex.js" ***!
  \****************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/shared/lib/router/utils/get-middleware-regex.js");

/***/ }),

/***/ "./utils/is-dynamic":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/is-dynamic.js" ***!
  \******************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/shared/lib/router/utils/is-dynamic.js");

/***/ }),

/***/ "./utils/parse-relative-url":
/*!**************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/parse-relative-url.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/shared/lib/router/utils/parse-relative-url.js");

/***/ }),

/***/ "./utils/querystring":
/*!*******************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/querystring.js" ***!
  \*******************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/shared/lib/router/utils/querystring.js");

/***/ }),

/***/ "./utils/resolve-rewrites":
/*!************************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/resolve-rewrites.js" ***!
  \************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/shared/lib/router/utils/resolve-rewrites.js");

/***/ }),

/***/ "./utils/route-matcher":
/*!*********************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/route-matcher.js" ***!
  \*********************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/shared/lib/router/utils/route-matcher.js");

/***/ }),

/***/ "./utils/route-regex":
/*!*******************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/route-regex.js" ***!
  \*******************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/shared/lib/router/utils/route-regex.js");

/***/ }),

/***/ "../shared/lib/utils":
/*!************************************************!*\
  !*** external "next/dist/shared/lib/utils.js" ***!
  \************************************************/
/***/ ((module) => {

module.exports = require("next/dist/shared/lib/utils.js");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

module.exports = require("react");

/***/ }),

/***/ "react-google-button":
/*!**************************************!*\
  !*** external "react-google-button" ***!
  \**************************************/
/***/ ((module) => {

module.exports = require("react-google-button");

/***/ }),

/***/ "react-is":
/*!***************************!*\
  !*** external "react-is" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("react-is");

/***/ }),

/***/ "react/jsx-runtime":
/*!************************************!*\
  !*** external "react/jsx-runtime" ***!
  \************************************/
/***/ ((module) => {

module.exports = require("react/jsx-runtime");

/***/ }),

/***/ "sweetalert2":
/*!******************************!*\
  !*** external "sweetalert2" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("sweetalert2");

/***/ }),

/***/ "./node_modules/firebase/auth/dist/index.mjs":
/*!***************************************************!*\
  !*** ./node_modules/firebase/auth/dist/index.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _firebase_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/auth */ \"@firebase/auth\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _firebase_auth__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _firebase_auth__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZmlyZWJhc2UvYXV0aC9kaXN0L2luZGV4Lm1qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUErQjtBQUMvQiIsInNvdXJjZXMiOlsid2VicGFjazovL2NsaWNrLWJhdHRsZS1uZXh0Ly4vbm9kZV9tb2R1bGVzL2ZpcmViYXNlL2F1dGgvZGlzdC9pbmRleC5tanM/MzA4NiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICdAZmlyZWJhc2UvYXV0aCc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/firebase/auth/dist/index.mjs\n");

/***/ }),

/***/ "./node_modules/firebase/database/dist/index.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/firebase/database/dist/index.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _firebase_database__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/database */ \"@firebase/database\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _firebase_database__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _firebase_database__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZmlyZWJhc2UvZGF0YWJhc2UvZGlzdC9pbmRleC5tanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBbUM7QUFDbkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGljay1iYXR0bGUtbmV4dC8uL25vZGVfbW9kdWxlcy9maXJlYmFzZS9kYXRhYmFzZS9kaXN0L2luZGV4Lm1qcz9iYWYxIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJ0BmaXJlYmFzZS9kYXRhYmFzZSc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/firebase/database/dist/index.mjs\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/index.tsx"));
module.exports = __webpack_exports__;

})();